

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul 08 22:15:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PR2	set	4043
    49  0000                     _ADCON2	set	4032
    50  0000                     _ADCON1	set	4033
    51  0000                     _ADCON0	set	4034
    52  0000                     _T2CON	set	4042
    53  0000                     _ECCP1CON	set	4029
    54  0000                     _TRISB	set	3987
    55  0000                     _PORTB	set	3969
    56  0000                     _CCPR1L	set	4030
    57  0000                     _ADRESH	set	4036
    58  0000                     _TMR2ON	set	32338
    59  0000                     _ADIE	set	31982
    60  0000                     _PEIE	set	32662
    61  0000                     _GIE	set	32663
    62  0000                     _TRISA0	set	31888
    63  0000                     _TRISC2	set	31906
    64  0000                     _TRISD7	set	31919
    65  0000                     _TRISD6	set	31918
    66  0000                     _TRISD5	set	31917
    67  0000                     _GODONE	set	32273
    68  0000                     _ADIF	set	31990
    69  0000                     _P1M1	set	32239
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  0000C4                     __pcinit:
    75                           	opt callstack 0
    76  0000C4                     start_initialization:
    77                           	opt callstack 0
    78  0000C4                     __initialization:
    79                           	opt callstack 0
    80  0000C4                     end_of_initialization:
    81                           	opt callstack 0
    82  0000C4                     __end_of__initialization:
    83                           	opt callstack 0
    84  0000C4  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    85  0000C6  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    86  0000C8  0100               	movlb	0
    87  0000CA  EF43  F000         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	cstackCOMRAM
    90  000001                     __pcstackCOMRAM:
    91                           	opt callstack 0
    92  000001                     ??_ISR:
    93  000001                     
    94                           ; 1 bytes @ 0x0
    95  000001                     	ds	2
    96  000003                     
    97                           ; 1 bytes @ 0x2
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 94 in file "last assignment.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   117 ;;      Params:         0       0       0       0       0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called:    1
   123 ;; This function calls:
   124 ;;		Nothing
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131  000086                     __ptext0:
   132                           	opt callstack 0
   133  000086                     _main:
   134                           	opt callstack 30
   135  000086                     
   136                           ;last assignment.c: 96:     TRISD5 = 0;
   137  000086  9A95               	bcf	3989,5,c	;volatile
   138                           
   139                           ;last assignment.c: 97:     TRISD6 = 0;
   140  000088  9C95               	bcf	3989,6,c	;volatile
   141                           
   142                           ;last assignment.c: 98:     TRISD7 = 0;
   143  00008A  9E95               	bcf	3989,7,c	;volatile
   144                           
   145                           ;last assignment.c: 99:     TRISC2 = 0;
   146  00008C  9494               	bcf	3988,2,c	;volatile
   147                           
   148                           ;last assignment.c: 100:     TRISA0 = 1;
   149  00008E  8092               	bsf	3986,0,c	;volatile
   150  000090                     
   151                           ;last assignment.c: 101:     TRISB = 0;
   152  000090  0E00               	movlw	0
   153  000092  6E93               	movwf	147,c	;volatile
   154                           
   155                           ;last assignment.c: 102:     ADRESH = 0;
   156  000094  0E00               	movlw	0
   157  000096  6EC4               	movwf	196,c	;volatile
   158                           
   159                           ;last assignment.c: 103:     ECCP1CON = 0B01001100;
   160  000098  0E4C               	movlw	76
   161  00009A  6EBD               	movwf	189,c	;volatile
   162                           
   163                           ;last assignment.c: 104:     T2CON = 0B00111001;
   164  00009C  0E39               	movlw	57
   165  00009E  6ECA               	movwf	202,c	;volatile
   166                           
   167                           ;last assignment.c: 105:     ADCON0 = 0B00000001;
   168  0000A0  0E01               	movlw	1
   169  0000A2  6EC2               	movwf	194,c	;volatile
   170                           
   171                           ;last assignment.c: 106:     ADCON1 = 0B00001110;
   172  0000A4  0E0E               	movlw	14
   173  0000A6  6EC1               	movwf	193,c	;volatile
   174                           
   175                           ;last assignment.c: 107:     ADCON2 = 0B00011010;
   176  0000A8  0E1A               	movlw	26
   177  0000AA  6EC0               	movwf	192,c	;volatile
   178  0000AC                     
   179                           ;last assignment.c: 108:     GIE = 1;
   180  0000AC  8EF2               	bsf	4082,7,c	;volatile
   181  0000AE                     
   182                           ;last assignment.c: 109:     PEIE = 1;
   183  0000AE  8CF2               	bsf	4082,6,c	;volatile
   184  0000B0                     
   185                           ;last assignment.c: 110:     ADIE = 1;
   186  0000B0  8C9D               	bsf	3997,6,c	;volatile
   187  0000B2                     
   188                           ;last assignment.c: 112:     PR2 = 255;
   189  0000B2  68CB               	setf	203,c	;volatile
   190                           
   191                           ;last assignment.c: 113:     CCPR1L = 190;
   192  0000B4  0EBE               	movlw	190
   193  0000B6  6EBE               	movwf	190,c	;volatile
   194  0000B8                     
   195                           ;last assignment.c: 115:     TMR2ON = 1;
   196  0000B8  84CA               	bsf	4042,2,c	;volatile
   197  0000BA                     
   198                           ;last assignment.c: 117:     GODONE = 1;
   199  0000BA  82C2               	bsf	4034,1,c	;volatile
   200  0000BC                     l59:
   201  0000BC  EF5E  F000         	goto	l59
   202  0000C0  EF07  F000         	goto	start
   203  0000C4                     __end_of_main:
   204                           	opt callstack 0
   205                           
   206 ;; *************** function _ISR *****************
   207 ;; Defined at:
   208 ;;		line 72 in file "last assignment.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, prodl, prodh
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0
   224 ;;      Temps:          2       0       0       0       0       0       0       0       0
   225 ;;      Totals:         2       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        2 bytes
   227 ;; Hardware stack levels used:    1
   228 ;; This function calls:
   229 ;;		Nothing
   230 ;; This function is called by:
   231 ;;		Interrupt level 2
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	intcode
   236  000008                     __pintcode:
   237                           	opt callstack 0
   238  000008                     _ISR:
   239                           	opt callstack 30
   240                           
   241                           ;incstack = 0
   242  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   243  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   244                           
   245                           	psect	intcode_body
   246  000012                     __pintcode_body:
   247                           	opt callstack 30
   248  000012                     int_func:
   249                           	opt callstack 30
   250  000012  0006               	pop		; remove dummy address from shadow register refresh
   251  000014  CFF3 F001          	movff	prodl,??_ISR
   252  000018  CFF4 F002          	movff	prodh,??_ISR+1
   253  00001C                     
   254                           ;last assignment.c: 75:     if(ADRESH < 128)
   255  00001C  0E80               	movlw	128
   256  00001E  60C4               	cpfslt	196,c	;volatile
   257  000020  EF14  F000         	goto	i2u1_41
   258  000024  EF16  F000         	goto	i2u1_40
   259  000028                     i2u1_41:
   260  000028  EF1E  F000         	goto	i2l744
   261  00002C                     i2u1_40:
   262  00002C                     
   263                           ;last assignment.c: 76:     {;last assignment.c: 77:         P1M1 = 1;
   264  00002C  8EBD               	bsf	4029,7,c	;volatile
   265  00002E                     
   266                           ;last assignment.c: 78:         CCPR1L = (255 - ADRESH)*8;
   267  00002E  50C4               	movf	196,w,c	;volatile
   268  000030  0AFF               	xorlw	255
   269  000032  0D08               	mullw	8
   270  000034  CFF3 FFBE          	movff	prodl,4030	;volatile
   271                           
   272                           ;last assignment.c: 79:     }
   273  000038  EF39  F000         	goto	i2l754
   274  00003C                     i2l744:
   275  00003C  0E80               	movlw	128
   276  00003E  18C4               	xorwf	196,w,c	;volatile
   277  000040  A4D8               	btfss	status,2,c
   278  000042  EF25  F000         	goto	i2u2_41
   279  000046  EF27  F000         	goto	i2u2_40
   280  00004A                     i2u2_41:
   281  00004A  EF2B  F000         	goto	i2l748
   282  00004E                     i2u2_40:
   283  00004E                     
   284                           ;last assignment.c: 81:     {;last assignment.c: 82:         CCPR1L = 0;
   285  00004E  0E00               	movlw	0
   286  000050  6EBE               	movwf	190,c	;volatile
   287                           
   288                           ;last assignment.c: 83:     }
   289  000052  EF39  F000         	goto	i2l754
   290  000056                     i2l748:
   291  000056  0E80               	movlw	128
   292  000058  64C4               	cpfsgt	196,c	;volatile
   293  00005A  EF31  F000         	goto	i2u3_41
   294  00005E  EF33  F000         	goto	i2u3_40
   295  000062                     i2u3_41:
   296  000062  EF39  F000         	goto	i2l754
   297  000066                     i2u3_40:
   298  000066                     
   299                           ;last assignment.c: 85:     {;last assignment.c: 86:         P1M1 = 0;
   300  000066  9EBD               	bcf	4029,7,c	;volatile
   301  000068                     
   302                           ;last assignment.c: 87:         CCPR1L = (ADRESH - 10)*8;
   303  000068  50C4               	movf	196,w,c	;volatile
   304  00006A  0D08               	mullw	8
   305  00006C  50F3               	movf	243,w,c
   306  00006E  0FB0               	addlw	176
   307  000070  6EBE               	movwf	190,c	;volatile
   308  000072                     i2l754:
   309                           
   310                           ;last assignment.c: 89:     PORTB = ADRESH;
   311  000072  CFC4 FF81          	movff	4036,3969	;volatile
   312  000076                     
   313                           ;last assignment.c: 90:     ADIF = 0;
   314  000076  9C9E               	bcf	3998,6,c	;volatile
   315  000078                     
   316                           ;last assignment.c: 91:     GODONE = 1;
   317  000078  82C2               	bsf	4034,1,c	;volatile
   318  00007A  C002  FFF4         	movff	??_ISR+1,prodh
   319  00007E  C001  FFF3         	movff	??_ISR,prodl
   320  000082  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321  000084  0011               	retfie		f
   322  000086                     __end_of_ISR:
   323                           	opt callstack 0
   324  0000                     
   325                           	psect	rparam
   326  0000                     
   327                           	psect	temp
   328  000003                     btemp:
   329                           	opt callstack 0
   330  000003                     	ds	1
   331  0000                     int$flags	set	btemp
   332  0000                     wtemp8	set	btemp+1
   333  0000                     ttemp5	set	btemp+1
   334  0000                     ttemp6	set	btemp+4
   335  0000                     ttemp7	set	btemp+8
   336                           tosu	equ	0xFFF
   337                           tosh	equ	0xFFE
   338                           tosl	equ	0xFFD
   339                           stkptr	equ	0xFFC
   340                           pclatu	equ	0xFFB
   341                           pclath	equ	0xFFA
   342                           pcl	equ	0xFF9
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           prodh	equ	0xFF4
   348                           prodl	equ	0xFF3
   349                           indf0	equ	0xFEF
   350                           postinc0	equ	0xFEE
   351                           postdec0	equ	0xFED
   352                           preinc0	equ	0xFEC
   353                           plusw0	equ	0xFEB
   354                           fsr0h	equ	0xFEA
   355                           fsr0l	equ	0xFE9
   356                           wreg	equ	0xFE8
   357                           indf1	equ	0xFE7
   358                           postinc1	equ	0xFE6
   359                           postdec1	equ	0xFE5
   360                           preinc1	equ	0xFE4
   361                           plusw1	equ	0xFE3
   362                           fsr1h	equ	0xFE2
   363                           fsr1l	equ	0xFE1
   364                           bsr	equ	0xFE0
   365                           indf2	equ	0xFDF
   366                           postinc2	equ	0xFDE
   367                           postdec2	equ	0xFDD
   368                           preinc2	equ	0xFDC
   369                           plusw2	equ	0xFDB
   370                           fsr2h	equ	0xFDA
   371                           fsr2l	equ	0xFD9
   372                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul 08 22:15:32 2020

                     l60 00BC                       l59 00BC              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l760 0086  
                    l770 00B2                      l762 0090                      l772 00B8  
                    l764 00AC                      l774 00BA                      l766 00AE  
                    l768 00B0                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _ISR 0008  
           __CFG_BOR$OFF 000000             __CFG_FOSC$HS 000000                     ?_ISR 0001  
           __CFG_WDT$OFF 000000                     _ADIE 007CEE                     _ADIF 007CF6  
                   _P1M1 007DEF                     _PEIE 007F96                     i2l54 007A  
                   _main 0086                     btemp 0003                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_ISR 0001  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _T2CON 000FCA                    i2l740 002C                    i2l750 0066  
                  i2l742 002E                    i2l752 0068                    i2l744 003C  
                  i2l746 004E                    i2l754 0072                    i2l738 001C  
                  i2l756 0076                    i2l748 0056                    i2l758 0078  
                  _PORTB 000F81            __CFG_USBDIV$1 000000                    _TRISB 000F93  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    ttemp5 0004  
                  ttemp6 0007                    ttemp7 000B                    status 000FD8  
                  wtemp8 0004           __CFG_ICPRT$OFF 000000          __initialization 00C4  
           __end_of_main 00C4                   ??_main 0003            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _CCPR1L 000FBE                   _GODONE 007E11  
                 _TMR2ON 007E52                   i2u1_40 002C                   i2u1_41 0028  
                 i2u2_40 004E                   i2u2_41 004A                   i2u3_40 0066  
                 i2u3_41 0062                   _TRISA0 007C90                   _TRISC2 007CA2  
                 _TRISD5 007CAD                   _TRISD6 007CAE                   _TRISD7 007CAF  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0060  
__end_of__initialization 00C4          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00C4                  __ramtop 0800  
                __ptext0 0086             __size_of_ISR 007E           __pintcode_body 0012  
   end_of_initialization 00C4                  int_func 0012      start_initialization 00C4  
            __end_of_ISR 0086         __CFG_LPT1OSC$OFF 000000                __pintcode 0008  
               _ECCP1CON 000FBD         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 003E                 int$flags 0003  
  __CFG_CPUDIV$OSC1_PLL2 000000                 intlevel2 0000  
