

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jul 07 18:04:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTB	set	3969
    50  0000                     _CCPR1L	set	4030
    51  0000                     _PR2	set	4043
    52  0000                     _ADCON2	set	4032
    53  0000                     _ADCON1	set	4033
    54  0000                     _ADCON0	set	4034
    55  0000                     _T2CON	set	4042
    56  0000                     _ECCP1CON	set	4029
    57  0000                     _ADRESH	set	4036
    58  0000                     _TRISB	set	3987
    59  0000                     _ADIF	set	31990
    60  0000                     _P1M1	set	32239
    61  0000                     _GODONE	set	32273
    62  0000                     _ADIE	set	31982
    63  0000                     _PEIE	set	32662
    64  0000                     _GIE	set	32663
    65  0000                     _TMR2ON	set	32338
    66  0000                     _TRISD7	set	31919
    67  0000                     _TRISD6	set	31918
    68  0000                     _TRISD5	set	31917
    69  0000                     _TRISC2	set	31906
    70  0000                     _TRISA3	set	31891
    71  0000                     _TRISA2	set	31890
    72  0000                     _TRISA0	set	31888
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  0000F6                     __pcinit:
    78                           	opt callstack 0
    79  0000F6                     start_initialization:
    80                           	opt callstack 0
    81  0000F6                     __initialization:
    82                           	opt callstack 0
    83  0000F6                     end_of_initialization:
    84                           	opt callstack 0
    85  0000F6                     __end_of__initialization:
    86                           	opt callstack 0
    87  0000F6  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    88  0000F8  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    89  0000FA  0100               	movlb	0
    90  0000FC  EF4D  F000         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	cstackCOMRAM
    93  000001                     __pcstackCOMRAM:
    94                           	opt callstack 0
    95  000001                     ??_motor_speed_direction:
    96  000001                     
    97                           ; 1 bytes @ 0x0
    98  000001                     	ds	2
    99  000003                     ??_motor:
   100                           
   101                           ; 1 bytes @ 0x2
   102  000003                     	ds	2
   103  000005                     
   104                           ; 1 bytes @ 0x4
   105 ;;
   106 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   107 ;;
   108 ;; *************** function _main *****************
   109 ;; Defined at:
   110 ;;		line 82 in file "assign_6-7.c"
   111 ;; Parameters:    Size  Location     Type
   112 ;;		None
   113 ;; Auto vars:     Size  Location     Type
   114 ;;		None
   115 ;; Return value:  Size  Location     Type
   116 ;;                  1    wreg      void 
   117 ;; Registers used:
   118 ;;		wreg, status,2
   119 ;; Tracked objects:
   120 ;;		On entry : 0/0
   121 ;;		On exit  : 0/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   124 ;;      Params:         0       0       0       0       0       0       0       0       0
   125 ;;      Locals:         0       0       0       0       0       0       0       0       0
   126 ;;      Temps:          0       0       0       0       0       0       0       0       0
   127 ;;      Totals:         0       0       0       0       0       0       0       0       0
   128 ;;Total ram usage:        0 bytes
   129 ;; Hardware stack levels required when called:    2
   130 ;; This function calls:
   131 ;;		Nothing
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138  00009A                     __ptext0:
   139                           	opt callstack 0
   140  00009A                     _main:
   141                           	opt callstack 29
   142  00009A                     
   143                           ;assign_6-7.c: 84:     TRISA0=1;
   144  00009A  8092               	bsf	3986,0,c	;volatile
   145                           
   146                           ;assign_6-7.c: 85:     TRISA2=1;
   147  00009C  8492               	bsf	3986,2,c	;volatile
   148                           
   149                           ;assign_6-7.c: 86:     TRISA3=1;
   150  00009E  8692               	bsf	3986,3,c	;volatile
   151  0000A0                     
   152                           ;assign_6-7.c: 88:     TRISB=0;
   153  0000A0  0E00               	movlw	0
   154  0000A2  6E93               	movwf	147,c	;volatile
   155  0000A4                     
   156                           ;assign_6-7.c: 90:     TRISC2 = 0;
   157  0000A4  9494               	bcf	3988,2,c	;volatile
   158  0000A6                     
   159                           ;assign_6-7.c: 91:     TRISD5 = 0;
   160  0000A6  9A95               	bcf	3989,5,c	;volatile
   161  0000A8                     
   162                           ;assign_6-7.c: 92:     TRISD6 = 0;
   163  0000A8  9C95               	bcf	3989,6,c	;volatile
   164  0000AA                     
   165                           ;assign_6-7.c: 93:     TRISD7 = 0;
   166  0000AA  9E95               	bcf	3989,7,c	;volatile
   167                           
   168                           ;assign_6-7.c: 94:     ADRESH=0;
   169  0000AC  0E00               	movlw	0
   170  0000AE  6EC4               	movwf	196,c	;volatile
   171                           
   172                           ;assign_6-7.c: 95:     ECCP1CON = 0B01001100;
   173  0000B0  0E4C               	movlw	76
   174  0000B2  6EBD               	movwf	189,c	;volatile
   175                           
   176                           ;assign_6-7.c: 96:     T2CON = 0B00000000;
   177  0000B4  0E00               	movlw	0
   178  0000B6  6ECA               	movwf	202,c	;volatile
   179                           
   180                           ;assign_6-7.c: 97:     ADCON0 = 0B00000001;
   181  0000B8  0E01               	movlw	1
   182  0000BA  6EC2               	movwf	194,c	;volatile
   183                           
   184                           ;assign_6-7.c: 105:     ADCON1 = 0B00001110;
   185  0000BC  0E0E               	movlw	14
   186  0000BE  6EC1               	movwf	193,c	;volatile
   187                           
   188                           ;assign_6-7.c: 106:     ADCON2 = 0B00011010;
   189  0000C0  0E1A               	movlw	26
   190  0000C2  6EC0               	movwf	192,c	;volatile
   191  0000C4                     
   192                           ;assign_6-7.c: 107:     TMR2ON=1;
   193  0000C4  84CA               	bsf	4042,2,c	;volatile
   194  0000C6                     
   195                           ;assign_6-7.c: 108:     PR2 = 255;
   196  0000C6  68CB               	setf	203,c	;volatile
   197                           
   198                           ;assign_6-7.c: 109:     CCPR1L = 190;
   199  0000C8  0EBE               	movlw	190
   200  0000CA  6EBE               	movwf	190,c	;volatile
   201  0000CC                     
   202                           ;assign_6-7.c: 110:     GIE=1;
   203  0000CC  8EF2               	bsf	4082,7,c	;volatile
   204  0000CE                     
   205                           ;assign_6-7.c: 111:     PEIE=1;
   206  0000CE  8CF2               	bsf	4082,6,c	;volatile
   207  0000D0                     
   208                           ;assign_6-7.c: 112:     ADIE=1;
   209  0000D0  8C9D               	bsf	3997,6,c	;volatile
   210  0000D2                     
   211                           ;assign_6-7.c: 113:     GODONE=1;
   212  0000D2  82C2               	bsf	4034,1,c	;volatile
   213  0000D4                     l60:
   214  0000D4  EF6A  F000         	goto	l60
   215  0000D8  EF07  F000         	goto	start
   216  0000DC                     __end_of_main:
   217                           	opt callstack 0
   218                           
   219 ;; *************** function _motor *****************
   220 ;; Defined at:
   221 ;;		line 79 in file "assign_6-7.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   235 ;;      Params:         0       0       0       0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0
   237 ;;      Temps:          2       0       0       0       0       0       0       0       0
   238 ;;      Totals:         2       0       0       0       0       0       0       0       0
   239 ;;Total ram usage:        2 bytes
   240 ;; Hardware stack levels used:    1
   241 ;; Hardware stack levels required when called:    1
   242 ;; This function calls:
   243 ;;		_motor_speed_direction
   244 ;; This function is called by:
   245 ;;		Interrupt level 2
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	intcode
   250  000008                     __pintcode:
   251                           	opt callstack 0
   252  000008                     _motor:
   253                           	opt callstack 29
   254                           
   255                           ;incstack = 0
   256  000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   257  00000A  ED6E  F000         	call	int_func,f	;refresh shadow registers
   258                           
   259                           	psect	intcode_body
   260  0000DC                     __pintcode_body:
   261                           	opt callstack 29
   262  0000DC                     int_func:
   263                           	opt callstack 29
   264  0000DC  0006               	pop		; remove dummy address from shadow register refresh
   265  0000DE  CFF3 F003          	movff	prodl,??_motor
   266  0000E2  CFF4 F004          	movff	prodh,??_motor+1
   267  0000E6                     
   268                           ;assign_6-7.c: 80:     motor_speed_direction();
   269  0000E6  EC09  F000         	call	_motor_speed_direction	;wreg free
   270  0000EA  C004  FFF4         	movff	??_motor+1,prodh
   271  0000EE  C003  FFF3         	movff	??_motor,prodl
   272  0000F2  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273  0000F4  0011               	retfie		f
   274  0000F6                     __end_of_motor:
   275                           	opt callstack 0
   276                           
   277 ;; *************** function _motor_speed_direction *****************
   278 ;; Defined at:
   279 ;;		line 118 in file "assign_6-7.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, prodl, prodh
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:          2       0       0       0       0       0       0       0       0
   296 ;;      Totals:         2       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        2 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		_motor
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text2
   307  000012                     __ptext2:
   308                           	opt callstack 0
   309  000012                     _motor_speed_direction:
   310                           	opt callstack 29
   311  000012                     
   312                           ;assign_6-7.c: 119:     ADRESH=ADRESH+31;
   313  000012  50C4               	movf	196,w,c	;volatile
   314  000014  0F1F               	addlw	31
   315  000016  6EC4               	movwf	196,c	;volatile
   316                           
   317                           ;assign_6-7.c: 126:     if(ADRESH < 122)
   318  000018  0E7A               	movlw	122
   319  00001A  60C4               	cpfslt	196,c	;volatile
   320  00001C  EF12  F000         	goto	i2u1_41
   321  000020  EF14  F000         	goto	i2u1_40
   322  000024                     i2u1_41:
   323  000024  EF20  F000         	goto	i2l754
   324  000028                     i2u1_40:
   325  000028                     
   326                           ;assign_6-7.c: 127:     {;assign_6-7.c: 129:         P1M1 = 0;
   327  000028  9EBD               	bcf	4029,7,c	;volatile
   328  00002A                     
   329                           ;assign_6-7.c: 130:         CCPR1L = ((250-ADRESH)*2*2);
   330  00002A  50C4               	movf	196,w,c	;volatile
   331  00002C  08FA               	sublw	250
   332  00002E  6E01               	movwf	??_motor_speed_direction^0,c
   333  000030  90D8               	bcf	status,0,c
   334  000032  3401               	rlcf	??_motor_speed_direction^0,w,c
   335  000034  6E02               	movwf	(??_motor_speed_direction+1)^0,c
   336  000036  90D8               	bcf	status,0,c
   337  000038  3402               	rlcf	(??_motor_speed_direction+1)^0,w,c
   338  00003A  6EBE               	movwf	190,c	;volatile
   339                           
   340                           ;assign_6-7.c: 131:     }
   341  00003C  EF4A  F000         	goto	i2l772
   342  000040                     i2l754:
   343  000040  0E7A               	movlw	122
   344  000042  18C4               	xorwf	196,w,c	;volatile
   345  000044  A4D8               	btfss	status,2,c
   346  000046  EF27  F000         	goto	i2u2_41
   347  00004A  EF29  F000         	goto	i2u2_40
   348  00004E                     i2u2_41:
   349  00004E  EF2D  F000         	goto	i2l758
   350  000052                     i2u2_40:
   351  000052                     
   352                           ;assign_6-7.c: 135:     {;assign_6-7.c: 136:         CCPR1L=0;
   353  000052  0E00               	movlw	0
   354  000054  6EBE               	movwf	190,c	;volatile
   355                           
   356                           ;assign_6-7.c: 137:     }
   357  000056  EF4A  F000         	goto	i2l772
   358  00005A                     i2l758:
   359  00005A  0E7A               	movlw	122
   360  00005C  64C4               	cpfsgt	196,c	;volatile
   361  00005E  EF33  F000         	goto	i2u3_41
   362  000062  EF35  F000         	goto	i2u3_40
   363  000066                     i2u3_41:
   364  000066  EF4A  F000         	goto	i2l772
   365  00006A                     i2u3_40:
   366  00006A                     
   367                           ;assign_6-7.c: 139:     {;assign_6-7.c: 141:         if(ADRESH > 185){
   368  00006A  0EB9               	movlw	185
   369  00006C  64C4               	cpfsgt	196,c	;volatile
   370  00006E  EF3B  F000         	goto	i2u4_41
   371  000072  EF3D  F000         	goto	i2u4_40
   372  000076                     i2u4_41:
   373  000076  EF3F  F000         	goto	i2l764
   374  00007A                     i2u4_40:
   375  00007A                     
   376                           ;assign_6-7.c: 142:             ADRESH =185;
   377  00007A  0EB9               	movlw	185
   378  00007C  6EC4               	movwf	196,c	;volatile
   379  00007E                     i2l764:
   380                           
   381                           ;assign_6-7.c: 144:         ADRESH=ADRESH+5;
   382  00007E  50C4               	movf	196,w,c	;volatile
   383  000080  0F05               	addlw	5
   384  000082  6EC4               	movwf	196,c	;volatile
   385  000084                     
   386                           ;assign_6-7.c: 145:         P1M1 = 1;
   387  000084  8EBD               	bsf	4029,7,c	;volatile
   388  000086                     
   389                           ;assign_6-7.c: 146:         CCPR1L = (ADRESH*2*2)-4;
   390  000086  50C4               	movf	196,w,c	;volatile
   391  000088  0D04               	mullw	4
   392  00008A  50F3               	movf	243,w,c
   393  00008C  0FFC               	addlw	252
   394  00008E  6EBE               	movwf	190,c	;volatile
   395  000090                     
   396                           ;assign_6-7.c: 147:         PORTB=ADRESH;
   397  000090  CFC4 FF81          	movff	4036,3969	;volatile
   398  000094                     i2l772:
   399                           
   400                           ;assign_6-7.c: 150:     ADIF = 0;
   401  000094  9C9E               	bcf	3998,6,c	;volatile
   402  000096                     
   403                           ;assign_6-7.c: 151:     GODONE = 1;
   404  000096  82C2               	bsf	4034,1,c	;volatile
   405  000098  0012               	return		;funcret
   406  00009A                     __end_of_motor_speed_direction:
   407                           	opt callstack 0
   408  0000                     
   409                           	psect	rparam
   410  0000                     
   411                           	psect	temp
   412  000005                     btemp:
   413                           	opt callstack 0
   414  000005                     	ds	1
   415  0000                     int$flags	set	btemp
   416  0000                     wtemp8	set	btemp+1
   417  0000                     ttemp5	set	btemp+1
   418  0000                     ttemp6	set	btemp+4
   419  0000                     ttemp7	set	btemp+8
   420                           tosu	equ	0xFFF
   421                           tosh	equ	0xFFE
   422                           tosl	equ	0xFFD
   423                           stkptr	equ	0xFFC
   424                           pclatu	equ	0xFFB
   425                           pclath	equ	0xFFA
   426                           pcl	equ	0xFF9
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           prodh	equ	0xFF4
   432                           prodl	equ	0xFF3
   433                           indf0	equ	0xFEF
   434                           postinc0	equ	0xFEE
   435                           postdec0	equ	0xFED
   436                           preinc0	equ	0xFEC
   437                           plusw0	equ	0xFEB
   438                           fsr0h	equ	0xFEA
   439                           fsr0l	equ	0xFE9
   440                           wreg	equ	0xFE8
   441                           indf1	equ	0xFE7
   442                           postinc1	equ	0xFE6
   443                           postdec1	equ	0xFE5
   444                           preinc1	equ	0xFE4
   445                           plusw1	equ	0xFE3
   446                           fsr1h	equ	0xFE2
   447                           fsr1l	equ	0xFE1
   448                           bsr	equ	0xFE0
   449                           indf2	equ	0xFDF
   450                           postinc2	equ	0xFDE
   451                           postdec2	equ	0xFDD
   452                           preinc2	equ	0xFDC
   453                           plusw2	equ	0xFDB
   454                           fsr2h	equ	0xFDA
   455                           fsr2l	equ	0xFD9
   456                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _motor in COMRAM

    _motor->_motor_speed_direction

Critical Paths under _main in BANK0

    None.

Critical Paths under _motor in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _motor in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _motor in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _motor in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _motor in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _motor in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _motor in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _motor in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _motor                                                2     2      0       0
                                              2 COMRAM     2     2      0
              _motor_speed_direction
 ---------------------------------------------------------------------------------
 (2) _motor_speed_direction                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _motor (ROOT)
   _motor_speed_direction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      4       4       1        4.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jul 07 18:04:34 2020

                            l60 00D4                              l61 00D4                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000                     __CFG_LVP$ON 000000                             l800 00D2  
                           l780 00A0                             l790 00C4                             l782 00A4  
                           l792 00C6                             l784 00A6                             l794 00CC  
                           l786 00A8                             l778 009A                             l796 00CE  
                           l788 00AA                             l798 00D0                             _GIE 007F97  
                  __CFG_CPB$OFF 000000                             _PR2 000FCB                    __CFG_CPD$OFF 000000  
                  __CFG_BOR$OFF 000000                    __CFG_FOSC$HS 000000                    __CFG_WDT$OFF 000000  
                          _ADIE 007CEE                            _ADIF 007CF6                            _P1M1 007DEF  
                          _PEIE 007F96                            i2l55 00EA                            i2l72 0098  
                          _main 009A                            btemp 0005                            prodh 000FF4  
                          prodl 000FF3                            start 000E                   __CFG_IESO$OFF 000000  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000          ?_motor_speed_direction 0001  
                 __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000                           ?_main 0001  
                         _T2CON 000FCA                           i2l750 0028                           i2l760 006A  
                         i2l752 002A                           i2l770 0090                           i2l762 007A  
                         i2l754 0040                           i2l764 007E                           i2l756 0052  
                         i2l772 0094                           i2l748 0012                           i2l774 0096  
                         i2l766 0084                           i2l758 005A                           i2l768 0086  
                         i2l776 00E6                           _PORTB 000F81                   __CFG_USBDIV$1 000000  
                         _TRISB 000F93                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
                         _motor 0008                           ttemp5 0006                           ttemp6 0009  
                         ttemp7 000D                           status 000FD8                           wtemp8 0006  
                __CFG_ICPRT$OFF 000000                  __CFG_PBADEN$ON 000000                 __initialization 00F6  
                  __end_of_main 00DC                          ??_main 0005                   __activetblptr 000000  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _CCPR1L 000FBE                          ?_motor 0001  
                        _GODONE 007E11                          _TMR2ON 007E52                          i2u1_40 0028  
                        i2u1_41 0024                          i2u2_40 0052                          i2u2_41 004E  
                        i2u3_40 006A                          i2u3_41 0066                          i2u4_40 007A  
                        i2u4_41 0076                          _TRISA0 007C90                          _TRISA2 007C92  
                        _TRISA3 007C93                          _TRISC2 007CA2                          _TRISD5 007CAD  
                        _TRISD6 007CAE                          _TRISD7 007CAF                  __CFG_XINST$OFF 000000  
                __CFG_STVREN$ON 000000                      __accesstop 0060         __end_of__initialization 00F6  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001                   __end_of_motor 00F6  
                       ??_motor 0003         ??_motor_speed_direction 0001                 __CFG_VREGEN$OFF 000000  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 00F6  
                       __ramtop 0800                         __ptext0 009A                         __ptext2 0012  
                __pintcode_body 00DC            end_of_initialization 00F6                         int_func 00DC  
           start_initialization 00F6  __size_of_motor_speed_direction 0088   __end_of_motor_speed_direction 009A  
              __CFG_LPT1OSC$OFF 000000                       __pintcode 0008                        _ECCP1CON 000FBD  
                __size_of_motor 00EE                __CFG_WDTPS$32768 000000                        __Hrparam 0000  
                      __Lrparam 0000                   __size_of_main 0042                        int$flags 0005  
         __CFG_CPUDIV$OSC1_PLL2 000000                        intlevel2 0000           _motor_speed_direction 0012  
