

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Aug 25 20:34:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTBbits	set	3969
    50  0000                     _PORTCbits	set	3970
    51  0000                     _CCPR1L	set	4030
    52  0000                     _PR2	set	4043
    53  0000                     _T2CON	set	4042
    54  0000                     _ECCP1CON	set	4029
    55  0000                     _PORTA	set	3968
    56  0000                     _TRISA	set	3986
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISB	set	3987
    60  0000                     _P1M1	set	32239
    61  0000                     _TMR2ON	set	32338
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  007C94                     __pcinit:
    67                           	opt callstack 0
    68  007C94                     start_initialization:
    69                           	opt callstack 0
    70  007C94                     __initialization:
    71                           	opt callstack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (14 bytes)
    74  007C94  EE00  F001         	lfsr	0,__pbssCOMRAM
    75  007C98  0E0E               	movlw	14
    76  007C9A                     clear_0:
    77  007C9A  6AEE               	clrf	postinc0,c
    78  007C9C  06E8               	decf	wreg,f,c
    79  007C9E  E1FD               	bnz	clear_0
    80  007CA0                     end_of_initialization:
    81                           	opt callstack 0
    82  007CA0                     __end_of__initialization:
    83                           	opt callstack 0
    84  007CA0  0100               	movlb	0
    85  007CA2  EF89  F03E         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	bssCOMRAM
    88  000001                     __pbssCOMRAM:
    89                           	opt callstack 0
    90  000001                     _check:
    91                           	opt callstack 0
    92  000001                     	ds	6
    93  000007                     _check_22:
    94                           	opt callstack 0
    95  000007                     	ds	2
    96  000009                     _check_11:
    97                           	opt callstack 0
    98  000009                     	ds	2
    99  00000B                     _check_00:
   100                           	opt callstack 0
   101  00000B                     	ds	2
   102  00000D                     _number:
   103                           	opt callstack 0
   104  00000D                     	ds	2
   105                           
   106                           	psect	cstackCOMRAM
   107  00000F                     __pcstackCOMRAM:
   108                           	opt callstack 0
   109  00000F                     ?_keypad_unit:
   110                           	opt callstack 0
   111  00000F                     ?___wmul:
   112                           	opt callstack 0
   113  00000F                     motor@num_pwm:
   114                           	opt callstack 0
   115  00000F                     ___wmul@multiplier:
   116                           	opt callstack 0
   117                           
   118                           ; 2 bytes @ 0x0
   119  00000F                     	ds	2
   120  000011                     ___wmul@multiplicand:
   121                           	opt callstack 0
   122                           
   123                           ; 2 bytes @ 0x2
   124  000011                     	ds	2
   125  000013                     ___wmul@product:
   126                           	opt callstack 0
   127                           
   128                           ; 2 bytes @ 0x4
   129  000013                     	ds	2
   130  000015                     
   131                           ; 1 bytes @ 0x6
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 92 in file "new.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   151 ;;      Params:         0       0       0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called:    1
   157 ;; This function calls:
   158 ;;		___wmul
   159 ;;		_keypad_unit
   160 ;;		_motor
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167  007D12                     __ptext0:
   168                           	opt callstack 0
   169  007D12                     _main:
   170                           	opt callstack 30
   171  007D12                     
   172                           ;new.c: 93:     TRISB=0xC0;
   173  007D12  0EC0               	movlw	192
   174  007D14  6E93               	movwf	147,c	;volatile
   175                           
   176                           ;new.c: 94:     TRISC=0xF0;
   177  007D16  0EF0               	movlw	240
   178  007D18  6E94               	movwf	148,c	;volatile
   179                           
   180                           ;new.c: 95:     TRISD=0x00;
   181  007D1A  0E00               	movlw	0
   182  007D1C  6E95               	movwf	149,c	;volatile
   183                           
   184                           ;new.c: 96:     TRISA=0x00;
   185  007D1E  0E00               	movlw	0
   186  007D20  6E92               	movwf	146,c	;volatile
   187                           
   188                           ;new.c: 97:     PORTA=0x00;
   189  007D22  0E00               	movlw	0
   190  007D24  6E80               	movwf	128,c	;volatile
   191                           
   192                           ;new.c: 99:     ECCP1CON = 0B01001100;
   193  007D26  0E4C               	movlw	76
   194  007D28  6EBD               	movwf	189,c	;volatile
   195                           
   196                           ;new.c: 100:     T2CON = 0B00000000;
   197  007D2A  0E00               	movlw	0
   198  007D2C  6ECA               	movwf	202,c	;volatile
   199                           
   200                           ;new.c: 101:     PR2 =195;
   201  007D2E  0EC3               	movlw	195
   202  007D30  6ECB               	movwf	203,c	;volatile
   203                           
   204                           ;new.c: 102:     CCPR1L = 200;
   205  007D32  0EC8               	movlw	200
   206  007D34  6EBE               	movwf	190,c	;volatile
   207  007D36                     
   208                           ;new.c: 103:     TMR2ON = 1;
   209  007D36  84CA               	bsf	4042,2,c	;volatile
   210                           
   211                           ;new.c: 104:     PORTA=0x00;
   212  007D38  0E00               	movlw	0
   213  007D3A  6E80               	movwf	128,c	;volatile
   214  007D3C                     
   215                           ;new.c: 105:     motor(0);
   216  007D3C  0E00               	movlw	0
   217  007D3E  6E10               	movwf	(motor@num_pwm+1)^0,c
   218  007D40  0E00               	movlw	0
   219  007D42  6E0F               	movwf	motor@num_pwm^0,c
   220  007D44  EC66  F03E         	call	_motor	;wreg free
   221  007D48                     l1079:
   222                           
   223                           ;new.c: 108:         check[0]=keypad_unit();
   224  007D48  EC08  F03F         	call	_keypad_unit	;wreg free
   225  007D4C  C00F  F001         	movff	?_keypad_unit,_check
   226  007D50  C010  F002         	movff	?_keypad_unit+1,_check+1
   227  007D54                     
   228                           ;new.c: 109:         check_00=check[0];
   229  007D54  C001  F00B         	movff	_check,_check_00
   230  007D58  C002  F00C         	movff	_check+1,_check_00+1
   231  007D5C                     l1083:
   232  007D5C  EC08  F03F         	call	_keypad_unit	;wreg free
   233  007D60  500B               	movf	_check_00^0,w,c
   234  007D62  180F               	xorwf	?_keypad_unit^0,w,c
   235  007D64  E109               	bnz	u600
   236  007D66  500C               	movf	(_check_00+1)^0,w,c
   237  007D68  1810               	xorwf	(?_keypad_unit+1)^0,w,c
   238  007D6A  B4D8               	btfsc	status,2,c
   239  007D6C  EFBA  F03E         	goto	u601
   240  007D70  EFBC  F03E         	goto	u600
   241  007D74                     u601:
   242  007D74  EFAE  F03E         	goto	l1083
   243  007D78                     u600:
   244  007D78                     
   245                           ;new.c: 116:         check[1]=keypad_unit();
   246  007D78  EC08  F03F         	call	_keypad_unit	;wreg free
   247  007D7C  C00F  F003         	movff	?_keypad_unit,_check+2
   248  007D80  C010  F004         	movff	?_keypad_unit+1,_check+3
   249  007D84                     
   250                           ;new.c: 117:         check_11=check[1]*10;
   251  007D84  C003  F00F         	movff	_check+2,___wmul@multiplier
   252  007D88  C004  F010         	movff	_check+3,___wmul@multiplier+1
   253  007D8C  0E00               	movlw	0
   254  007D8E  6E12               	movwf	(___wmul@multiplicand+1)^0,c
   255  007D90  0E0A               	movlw	10
   256  007D92  6E11               	movwf	___wmul@multiplicand^0,c
   257  007D94  EC53  F03E         	call	___wmul	;wreg free
   258  007D98  C00F  F009         	movff	?___wmul,_check_11
   259  007D9C  C010  F00A         	movff	?___wmul+1,_check_11+1
   260  007DA0                     
   261                           ;new.c: 118:         number=check_00+check_11;
   262  007DA0  5009               	movf	_check_11^0,w,c
   263  007DA2  240B               	addwf	_check_00^0,w,c
   264  007DA4  6E0D               	movwf	_number^0,c
   265  007DA6  500A               	movf	(_check_11+1)^0,w,c
   266  007DA8  200C               	addwfc	(_check_00+1)^0,w,c
   267  007DAA  6E0E               	movwf	(_number+1)^0,c
   268  007DAC                     l1091:
   269  007DAC  EC08  F03F         	call	_keypad_unit	;wreg free
   270  007DB0  5009               	movf	_check_11^0,w,c
   271  007DB2  180F               	xorwf	?_keypad_unit^0,w,c
   272  007DB4  E109               	bnz	u610
   273  007DB6  500A               	movf	(_check_11+1)^0,w,c
   274  007DB8  1810               	xorwf	(?_keypad_unit+1)^0,w,c
   275  007DBA  B4D8               	btfsc	status,2,c
   276  007DBC  EFE2  F03E         	goto	u611
   277  007DC0  EFE4  F03E         	goto	u610
   278  007DC4                     u611:
   279  007DC4  EFD6  F03E         	goto	l1091
   280  007DC8                     u610:
   281  007DC8                     
   282                           ;new.c: 125:         check[2]=keypad_unit();
   283  007DC8  EC08  F03F         	call	_keypad_unit	;wreg free
   284  007DCC  C00F  F005         	movff	?_keypad_unit,_check+4
   285  007DD0  C010  F006         	movff	?_keypad_unit+1,_check+5
   286  007DD4                     
   287                           ;new.c: 126:         check_22=check[2];
   288  007DD4  C005  F007         	movff	_check+4,_check_22
   289  007DD8  C006  F008         	movff	_check+5,_check_22+1
   290  007DDC                     
   291                           ;new.c: 133:         motor(check_11+check_22);
   292  007DDC  5007               	movf	_check_22^0,w,c
   293  007DDE  2409               	addwf	_check_11^0,w,c
   294  007DE0  6E0F               	movwf	motor@num_pwm^0,c
   295  007DE2  5008               	movf	(_check_22+1)^0,w,c
   296  007DE4  200A               	addwfc	(_check_11+1)^0,w,c
   297  007DE6  6E10               	movwf	(motor@num_pwm+1)^0,c
   298  007DE8  EC66  F03E         	call	_motor	;wreg free
   299  007DEC                     l1099:
   300  007DEC  EC08  F03F         	call	_keypad_unit	;wreg free
   301  007DF0  5007               	movf	_check_22^0,w,c
   302  007DF2  180F               	xorwf	?_keypad_unit^0,w,c
   303  007DF4  E109               	bnz	u620
   304  007DF6  5008               	movf	(_check_22+1)^0,w,c
   305  007DF8  1810               	xorwf	(?_keypad_unit+1)^0,w,c
   306  007DFA  B4D8               	btfsc	status,2,c
   307  007DFC  EF02  F03F         	goto	u621
   308  007E00  EF04  F03F         	goto	u620
   309  007E04                     u621:
   310  007E04  EFF6  F03E         	goto	l1099
   311  007E08                     u620:
   312  007E08  EFA4  F03E         	goto	l1079
   313  007E0C  EF00  F000         	goto	start
   314  007E10                     __end_of_main:
   315                           	opt callstack 0
   316                           
   317 ;; *************** function _motor *****************
   318 ;; Defined at:
   319 ;;		line 221 in file "new.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;  num_pwm         2    0[COMRAM] int 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   333 ;;      Params:         2       0       0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0       0       0
   336 ;;      Totals:         2       0       0       0       0       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text1
   347  007CCC                     __ptext1:
   348                           	opt callstack 0
   349  007CCC                     _motor:
   350                           	opt callstack 30
   351  007CCC                     
   352                           ;new.c: 223:     if(!PORTBbits.RB6){
   353  007CCC  BC81               	btfsc	129,6,c	;volatile
   354  007CCE  EF6B  F03E         	goto	u331
   355  007CD2  EF6D  F03E         	goto	u330
   356  007CD6                     u331:
   357  007CD6  EF71  F03E         	goto	l128
   358  007CDA                     u330:
   359  007CDA                     
   360                           ;new.c: 224:         CCPR1L = 0;
   361  007CDA  0E00               	movlw	0
   362  007CDC  6EBE               	movwf	190,c	;volatile
   363                           
   364                           ;new.c: 225:     }
   365  007CDE  EF88  F03E         	goto	l133
   366  007CE2                     l128:
   367                           
   368                           ;new.c: 228:         if(!PORTBbits.RB7)
   369  007CE2  BE81               	btfsc	129,7,c	;volatile
   370  007CE4  EF76  F03E         	goto	u341
   371  007CE8  EF78  F03E         	goto	u340
   372  007CEC                     u341:
   373  007CEC  EF7E  F03E         	goto	l130
   374  007CF0                     u340:
   375  007CF0                     
   376                           ;new.c: 229:         {;new.c: 230:             P1M1 = 0;
   377  007CF0  9EBD               	bcf	4029,7,c	;volatile
   378  007CF2                     l969:
   379                           
   380                           ;new.c: 231:             CCPR1L = num_pwm*2;
   381  007CF2  500F               	movf	motor@num_pwm^0,w,c
   382  007CF4  240F               	addwf	motor@num_pwm^0,w,c
   383  007CF6  6EBE               	movwf	190,c	;volatile
   384                           
   385                           ;new.c: 232:         }
   386  007CF8  EF88  F03E         	goto	l133
   387  007CFC                     l130:
   388  007CFC  AE81               	btfss	129,7,c	;volatile
   389  007CFE  EF83  F03E         	goto	u351
   390  007D02  EF85  F03E         	goto	u350
   391  007D06                     u351:
   392  007D06  EF88  F03E         	goto	l133
   393  007D0A                     u350:
   394  007D0A                     
   395                           ;new.c: 235:         {;new.c: 236:             P1M1 = 1;
   396  007D0A  8EBD               	bsf	4029,7,c	;volatile
   397  007D0C  EF79  F03E         	goto	l969
   398  007D10                     l133:
   399  007D10  0012               	return		;funcret
   400  007D12                     __end_of_motor:
   401                           	opt callstack 0
   402                           
   403 ;; *************** function _keypad_unit *****************
   404 ;; Defined at:
   405 ;;		line 148 in file "new.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  2    0[COMRAM] int 
   412 ;; Registers used:
   413 ;;		wreg, status,2
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   419 ;;      Params:         2       0       0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text2
   433  007E10                     __ptext2:
   434                           	opt callstack 0
   435  007E10                     _keypad_unit:
   436                           	opt callstack 30
   437  007E10                     
   438                           ;new.c: 150:     PORTCbits.RC0 =1;PORTCbits.RC1 =0;PORTBbits.RB2 =0;
   439  007E10  8082               	bsf	130,0,c	;volatile
   440  007E12  9282               	bcf	130,1,c	;volatile
   441  007E14  9481               	bcf	129,2,c	;volatile
   442                           
   443                           ;new.c: 151:     if (PORTCbits.RC4==1){
   444  007E16  A882               	btfss	130,4,c	;volatile
   445  007E18  EF10  F03F         	goto	u361
   446  007E1C  EF12  F03F         	goto	u360
   447  007E20                     u361:
   448  007E20  EF21  F03F         	goto	l60
   449  007E24                     u360:
   450  007E24                     l61:
   451  007E24  B882               	btfsc	130,4,c	;volatile
   452  007E26  EF17  F03F         	goto	u371
   453  007E2A  EF19  F03F         	goto	u370
   454  007E2E                     u371:
   455  007E2E  EF12  F03F         	goto	l61
   456  007E32                     u370:
   457  007E32                     
   458                           ;new.c: 153:         return 1;
   459  007E32  0E00               	movlw	0
   460  007E34  6E10               	movwf	(?_keypad_unit+1)^0,c
   461  007E36  0E01               	movlw	1
   462  007E38  6E0F               	movwf	?_keypad_unit^0,c
   463  007E3A  EFFF  F03F         	goto	l64
   464  007E3E                     l981:
   465  007E3E  EFFF  F03F         	goto	l64
   466  007E42                     l60:
   467  007E42  AA82               	btfss	130,5,c	;volatile
   468  007E44  EF26  F03F         	goto	u381
   469  007E48  EF28  F03F         	goto	u380
   470  007E4C                     u381:
   471  007E4C  EF35  F03F         	goto	l66
   472  007E50                     u380:
   473  007E50                     l67:
   474  007E50  BA82               	btfsc	130,5,c	;volatile
   475  007E52  EF2D  F03F         	goto	u391
   476  007E56  EF2F  F03F         	goto	u390
   477  007E5A                     u391:
   478  007E5A  EF28  F03F         	goto	l67
   479  007E5E                     u390:
   480  007E5E                     
   481                           ;new.c: 157:         return 4;
   482  007E5E  0E00               	movlw	0
   483  007E60  6E10               	movwf	(?_keypad_unit+1)^0,c
   484  007E62  0E04               	movlw	4
   485  007E64  6E0F               	movwf	?_keypad_unit^0,c
   486  007E66  EFFF  F03F         	goto	l64
   487  007E6A                     l66:
   488  007E6A  AC82               	btfss	130,6,c	;volatile
   489  007E6C  EF3A  F03F         	goto	u401
   490  007E70  EF3C  F03F         	goto	u400
   491  007E74                     u401:
   492  007E74  EF49  F03F         	goto	l71
   493  007E78                     u400:
   494  007E78                     l72:
   495  007E78  BC82               	btfsc	130,6,c	;volatile
   496  007E7A  EF41  F03F         	goto	u411
   497  007E7E  EF43  F03F         	goto	u410
   498  007E82                     u411:
   499  007E82  EF3C  F03F         	goto	l72
   500  007E86                     u410:
   501  007E86                     
   502                           ;new.c: 161:         return 7;
   503  007E86  0E00               	movlw	0
   504  007E88  6E10               	movwf	(?_keypad_unit+1)^0,c
   505  007E8A  0E07               	movlw	7
   506  007E8C  6E0F               	movwf	?_keypad_unit^0,c
   507  007E8E  EFFF  F03F         	goto	l64
   508  007E92                     l71:
   509  007E92  AE82               	btfss	130,7,c	;volatile
   510  007E94  EF4E  F03F         	goto	u421
   511  007E98  EF50  F03F         	goto	u420
   512  007E9C                     u421:
   513  007E9C  EF5D  F03F         	goto	l65
   514  007EA0                     u420:
   515  007EA0                     l77:
   516  007EA0  BE82               	btfsc	130,7,c	;volatile
   517  007EA2  EF55  F03F         	goto	u431
   518  007EA6  EF57  F03F         	goto	u430
   519  007EAA                     u431:
   520  007EAA  EF50  F03F         	goto	l77
   521  007EAE                     u430:
   522  007EAE                     
   523                           ;new.c: 165:         return 10;
   524  007EAE  0E00               	movlw	0
   525  007EB0  6E10               	movwf	(?_keypad_unit+1)^0,c
   526  007EB2  0E0A               	movlw	10
   527  007EB4  6E0F               	movwf	?_keypad_unit^0,c
   528  007EB6  EFFF  F03F         	goto	l64
   529  007EBA                     l65:
   530                           
   531                           ;new.c: 170:     PORTCbits.RC0 =0;PORTCbits.RC1 =1;PORTBbits.RB2 =0;
   532  007EBA  9082               	bcf	130,0,c	;volatile
   533  007EBC  8282               	bsf	130,1,c	;volatile
   534  007EBE  9481               	bcf	129,2,c	;volatile
   535                           
   536                           ;new.c: 171:     if (PORTCbits.RC4==1){
   537  007EC0  A882               	btfss	130,4,c	;volatile
   538  007EC2  EF65  F03F         	goto	u441
   539  007EC6  EF67  F03F         	goto	u440
   540  007ECA                     u441:
   541  007ECA  EF74  F03F         	goto	l80
   542  007ECE                     u440:
   543  007ECE                     l81:
   544  007ECE  B882               	btfsc	130,4,c	;volatile
   545  007ED0  EF6C  F03F         	goto	u451
   546  007ED4  EF6E  F03F         	goto	u450
   547  007ED8                     u451:
   548  007ED8  EF67  F03F         	goto	l81
   549  007EDC                     u450:
   550  007EDC                     
   551                           ;new.c: 173:         return 2;
   552  007EDC  0E00               	movlw	0
   553  007EDE  6E10               	movwf	(?_keypad_unit+1)^0,c
   554  007EE0  0E02               	movlw	2
   555  007EE2  6E0F               	movwf	?_keypad_unit^0,c
   556  007EE4  EFFF  F03F         	goto	l64
   557  007EE8                     l80:
   558  007EE8  AA82               	btfss	130,5,c	;volatile
   559  007EEA  EF79  F03F         	goto	u461
   560  007EEE  EF7B  F03F         	goto	u460
   561  007EF2                     u461:
   562  007EF2  EF88  F03F         	goto	l85
   563  007EF6                     u460:
   564  007EF6                     l86:
   565  007EF6  BA82               	btfsc	130,5,c	;volatile
   566  007EF8  EF80  F03F         	goto	u471
   567  007EFC  EF82  F03F         	goto	u470
   568  007F00                     u471:
   569  007F00  EF7B  F03F         	goto	l86
   570  007F04                     u470:
   571  007F04                     
   572                           ;new.c: 177:         return 5;
   573  007F04  0E00               	movlw	0
   574  007F06  6E10               	movwf	(?_keypad_unit+1)^0,c
   575  007F08  0E05               	movlw	5
   576  007F0A  6E0F               	movwf	?_keypad_unit^0,c
   577  007F0C  EFFF  F03F         	goto	l64
   578  007F10                     l85:
   579  007F10  AC82               	btfss	130,6,c	;volatile
   580  007F12  EF8D  F03F         	goto	u481
   581  007F16  EF8F  F03F         	goto	u480
   582  007F1A                     u481:
   583  007F1A  EF9C  F03F         	goto	l90
   584  007F1E                     u480:
   585  007F1E                     l91:
   586  007F1E  BC82               	btfsc	130,6,c	;volatile
   587  007F20  EF94  F03F         	goto	u491
   588  007F24  EF96  F03F         	goto	u490
   589  007F28                     u491:
   590  007F28  EF8F  F03F         	goto	l91
   591  007F2C                     u490:
   592  007F2C                     
   593                           ;new.c: 181:         return 8;
   594  007F2C  0E00               	movlw	0
   595  007F2E  6E10               	movwf	(?_keypad_unit+1)^0,c
   596  007F30  0E08               	movlw	8
   597  007F32  6E0F               	movwf	?_keypad_unit^0,c
   598  007F34  EFFF  F03F         	goto	l64
   599  007F38                     l90:
   600  007F38  AE82               	btfss	130,7,c	;volatile
   601  007F3A  EFA1  F03F         	goto	u501
   602  007F3E  EFA3  F03F         	goto	u500
   603  007F42                     u501:
   604  007F42  EFB0  F03F         	goto	l84
   605  007F46                     u500:
   606  007F46                     l96:
   607  007F46  BE82               	btfsc	130,7,c	;volatile
   608  007F48  EFA8  F03F         	goto	u511
   609  007F4C  EFAA  F03F         	goto	u510
   610  007F50                     u511:
   611  007F50  EFA3  F03F         	goto	l96
   612  007F54                     u510:
   613  007F54                     l1033:
   614                           
   615                           ;new.c: 185:         return 0;
   616  007F54  0E00               	movlw	0
   617  007F56  6E10               	movwf	(?_keypad_unit+1)^0,c
   618  007F58  0E00               	movlw	0
   619  007F5A  6E0F               	movwf	?_keypad_unit^0,c
   620  007F5C  EFFF  F03F         	goto	l64
   621  007F60                     l84:
   622                           
   623                           ;new.c: 189:     PORTCbits.RC0 =0;PORTCbits.RC1 =0;PORTBbits.RB2 =1;
   624  007F60  9082               	bcf	130,0,c	;volatile
   625  007F62  9282               	bcf	130,1,c	;volatile
   626  007F64  8481               	bsf	129,2,c	;volatile
   627                           
   628                           ;new.c: 190:     if (PORTCbits.RC4==1){
   629  007F66  A882               	btfss	130,4,c	;volatile
   630  007F68  EFB8  F03F         	goto	u521
   631  007F6C  EFBA  F03F         	goto	u520
   632  007F70                     u521:
   633  007F70  EFC7  F03F         	goto	l99
   634  007F74                     u520:
   635  007F74                     l100:
   636  007F74  B882               	btfsc	130,4,c	;volatile
   637  007F76  EFBF  F03F         	goto	u531
   638  007F7A  EFC1  F03F         	goto	u530
   639  007F7E                     u531:
   640  007F7E  EFBA  F03F         	goto	l100
   641  007F82                     u530:
   642  007F82                     
   643                           ;new.c: 192:         return 3;
   644  007F82  0E00               	movlw	0
   645  007F84  6E10               	movwf	(?_keypad_unit+1)^0,c
   646  007F86  0E03               	movlw	3
   647  007F88  6E0F               	movwf	?_keypad_unit^0,c
   648  007F8A  EFFF  F03F         	goto	l64
   649  007F8E                     l99:
   650  007F8E  AA82               	btfss	130,5,c	;volatile
   651  007F90  EFCC  F03F         	goto	u541
   652  007F94  EFCE  F03F         	goto	u540
   653  007F98                     u541:
   654  007F98  EFDB  F03F         	goto	l104
   655  007F9C                     u540:
   656  007F9C                     l105:
   657  007F9C  BA82               	btfsc	130,5,c	;volatile
   658  007F9E  EFD3  F03F         	goto	u551
   659  007FA2  EFD5  F03F         	goto	u550
   660  007FA6                     u551:
   661  007FA6  EFCE  F03F         	goto	l105
   662  007FAA                     u550:
   663  007FAA                     
   664                           ;new.c: 196:         return 6;
   665  007FAA  0E00               	movlw	0
   666  007FAC  6E10               	movwf	(?_keypad_unit+1)^0,c
   667  007FAE  0E06               	movlw	6
   668  007FB0  6E0F               	movwf	?_keypad_unit^0,c
   669  007FB2  EFFF  F03F         	goto	l64
   670  007FB6                     l104:
   671  007FB6  AC82               	btfss	130,6,c	;volatile
   672  007FB8  EFE0  F03F         	goto	u561
   673  007FBC  EFE2  F03F         	goto	u560
   674  007FC0                     u561:
   675  007FC0  EFEF  F03F         	goto	l109
   676  007FC4                     u560:
   677  007FC4                     l110:
   678  007FC4  BC82               	btfsc	130,6,c	;volatile
   679  007FC6  EFE7  F03F         	goto	u571
   680  007FCA  EFE9  F03F         	goto	u570
   681  007FCE                     u571:
   682  007FCE  EFE2  F03F         	goto	l110
   683  007FD2                     u570:
   684  007FD2                     
   685                           ;new.c: 200:         return 9;
   686  007FD2  0E00               	movlw	0
   687  007FD4  6E10               	movwf	(?_keypad_unit+1)^0,c
   688  007FD6  0E09               	movlw	9
   689  007FD8  6E0F               	movwf	?_keypad_unit^0,c
   690  007FDA  EFFF  F03F         	goto	l64
   691  007FDE                     l109:
   692  007FDE  AE82               	btfss	130,7,c	;volatile
   693  007FE0  EFF4  F03F         	goto	u581
   694  007FE4  EFF6  F03F         	goto	u580
   695  007FE8                     u581:
   696  007FE8  EF1F  F03F         	goto	l981
   697  007FEC                     u580:
   698  007FEC                     l115:
   699  007FEC  BE82               	btfsc	130,7,c	;volatile
   700  007FEE  EFFB  F03F         	goto	u591
   701  007FF2  EFFD  F03F         	goto	u590
   702  007FF6                     u591:
   703  007FF6  EFF6  F03F         	goto	l115
   704  007FFA                     u590:
   705  007FFA  EFAA  F03F         	goto	l1033
   706  007FFE                     l64:
   707  007FFE  0012               	return		;funcret
   708  008000                     __end_of_keypad_unit:
   709                           	opt callstack 0
   710                           
   711 ;; *************** function ___wmul *****************
   712 ;; Defined at:
   713 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  multiplier      2    0[COMRAM] unsigned int 
   716 ;;  multiplicand    2    2[COMRAM] unsigned int 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  product         2    4[COMRAM] unsigned int 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  2    0[COMRAM] unsigned int 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, prodl, prodh
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   728 ;;      Params:         4       0       0       0       0       0       0       0       0
   729 ;;      Locals:         2       0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0
   731 ;;      Totals:         6       0       0       0       0       0       0       0       0
   732 ;;Total ram usage:        6 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text3
   742  007CA6                     __ptext3:
   743                           	opt callstack 0
   744  007CA6                     ___wmul:
   745                           	opt callstack 30
   746  007CA6  500F               	movf	___wmul@multiplier^0,w,c
   747  007CA8  0211               	mulwf	___wmul@multiplicand^0,c
   748  007CAA  CFF3 F013          	movff	prodl,___wmul@product
   749  007CAE  CFF4 F014          	movff	prodh,___wmul@product+1
   750  007CB2  500F               	movf	___wmul@multiplier^0,w,c
   751  007CB4  0212               	mulwf	(___wmul@multiplicand+1)^0,c
   752  007CB6  50F3               	movf	243,w,c
   753  007CB8  2614               	addwf	(___wmul@product+1)^0,f,c
   754  007CBA  5010               	movf	(___wmul@multiplier+1)^0,w,c
   755  007CBC  0211               	mulwf	___wmul@multiplicand^0,c
   756  007CBE  50F3               	movf	243,w,c
   757  007CC0  2614               	addwf	(___wmul@product+1)^0,f,c
   758  007CC2  C013  F00F         	movff	___wmul@product,?___wmul
   759  007CC6  C014  F010         	movff	___wmul@product+1,?___wmul+1
   760  007CCA  0012               	return		;funcret
   761  007CCC                     __end_of___wmul:
   762                           	opt callstack 0
   763  0000                     
   764                           	psect	rparam
   765  0000                     tosu	equ	0xFFF
   766                           tosh	equ	0xFFE
   767                           tosl	equ	0xFFD
   768                           stkptr	equ	0xFFC
   769                           pclatu	equ	0xFFB
   770                           pclath	equ	0xFFA
   771                           pcl	equ	0xFF9
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           prodh	equ	0xFF4
   777                           prodl	equ	0xFF3
   778                           indf0	equ	0xFEF
   779                           postinc0	equ	0xFEE
   780                           postdec0	equ	0xFED
   781                           preinc0	equ	0xFEC
   782                           plusw0	equ	0xFEB
   783                           fsr0h	equ	0xFEA
   784                           fsr0l	equ	0xFE9
   785                           wreg	equ	0xFE8
   786                           indf1	equ	0xFE7
   787                           postinc1	equ	0xFE6
   788                           postdec1	equ	0xFE5
   789                           preinc1	equ	0xFE4
   790                           plusw1	equ	0xFE3
   791                           fsr1h	equ	0xFE2
   792                           fsr1l	equ	0xFE1
   793                           bsr	equ	0xFE0
   794                           indf2	equ	0xFDF
   795                           postinc2	equ	0xFDE
   796                           postdec2	equ	0xFDD
   797                           preinc2	equ	0xFDC
   798                           plusw2	equ	0xFDB
   799                           fsr2h	equ	0xFDA
   800                           fsr2l	equ	0xFD9
   801                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     507
                             ___wmul
                        _keypad_unit
                              _motor
 ---------------------------------------------------------------------------------
 (1) _motor                                                2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _keypad_unit                                          2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _keypad_unit
   _motor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      14       1       21.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      20        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Aug 25 20:34:09 2020

                     l60 7E42                       l61 7E24                       l71 7E92  
                     l80 7EE8                       l72 7E78                       l64 7FFE  
                     l81 7ECE                       l65 7EBA                       l90 7F38  
                     l66 7E6A                       l91 7F1E                       l67 7E50  
                     l84 7F60                       l85 7F10                       l77 7EA0  
                     l86 7EF6                       l96 7F46                       l99 7F8E  
    ___wmul@multiplicand 0011              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l100 7F74                      l110 7FC4  
                    l104 7FB6                      l105 7F9C                      l130 7CFC  
                    l115 7FEC                      l109 7FDE                      l133 7D10  
                    l136 7CCA                      l128 7CE2                      l971 7D0A  
                    l963 7CCC                      l981 7E3E                      l965 7CDA  
                    l975 7E10                      l967 7CF0                      l969 7CF2  
                    l995 7E86                      l987 7E5E                      l979 7E32  
           __CFG_CPB$OFF 000000                      u400 7E78                      u401 7E74  
                    u410 7E86                      u330 7CDA                      u411 7E82  
                    u331 7CD6                      u500 7F46                      u420 7EA0  
                    u340 7CF0                      u501 7F42                      u421 7E9C  
                    u341 7CEC                      u510 7F54                      u430 7EAE  
                    u350 7D0A                      _PR2 000FCB                      u511 7F50  
                    u431 7EAA                      u351 7D06                      u520 7F74  
                    u440 7ECE                      u360 7E24                      u600 7D78  
                    u521 7F70                      u441 7ECA                      u361 7E20  
                    u601 7D74                      u530 7F82                      u450 7EDC  
                    u370 7E32                      u610 7DC8             __CFG_CPD$OFF 000000  
                    u531 7F7E                      u451 7ED8                      u371 7E2E  
                    u611 7DC4                      u540 7F9C                      u460 7EF6  
                    u380 7E50                      u620 7E08                      u541 7F98  
                    u461 7EF2                      u381 7E4C                      u621 7E04  
                    u550 7FAA                      u470 7F04                      u390 7E5E  
                    u551 7FA6                      u471 7F00                      u391 7E5A  
                    u560 7FC4                      u480 7F1E                      u561 7FC0  
                    u481 7F1A                      u570 7FD2                      u490 7F2C  
                    u571 7FCE                      u491 7F28                      u580 7FEC  
                    u581 7FE8                      u590 7FFA                      u591 7FF6  
           __CFG_BOR$OFF 000000                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_WDT$OFF 000000                     l1003 7EAE                     l1033 7F54  
                   l1025 7F2C                     l1017 7F04                     l1009 7EDC  
                   l1055 7FD2                     l1047 7FAA                     l1039 7F82  
                   l1081 7D54                     l1073 7D12                     l1067 7CA6  
                   l1091 7DAC                     l1083 7D5C                     l1075 7D36  
                   l1069 7CC2                     l1093 7DC8                     l1085 7D78  
                   l1077 7D3C                     l1095 7DD4                     l1087 7D84  
                   l1079 7D48                     l1097 7DDC                     l1089 7DA0  
                   l1099 7DEC                     _P1M1 007DEF                     _main 7D12  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 000F  
                  _T2CON 000FCA                    _PORTA 000F80            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000                    _check 0001  
         __CFG_EBTRB$OFF 000000             ?_keypad_unit 000F                    _motor 7CCC  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 7C94             __end_of_main 7E10                   ??_main 0015  
          __activetblptr 000000                   _CCPR1L 000FBE                   ?_motor 000F  
                 _TMR2ON 007E52           __CFG_XINST$OFF 000000                   ___wmul 7CA6  
         __CFG_STVREN$ON 000000                   clear_0 7C9A                   _number 000D  
             __accesstop 0060  __end_of__initialization 7CA0            ___rparam_used 000001  
         __pcstackCOMRAM 000F            __end_of_motor 7D12                  ??_motor 0011  
   __size_of_keypad_unit 01F0                  ?___wmul 000F          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000          __size_of___wmul 0026  
                __pcinit 7C94                  __ramtop 0800                  __ptext0 7D12  
                __ptext1 7CCC                  __ptext2 7E10                  __ptext3 7CA6  
   end_of_initialization 7CA0                  postinc0 000FEE                _PORTBbits 000F81  
              _PORTCbits 000F82           __end_of___wmul 7CCC      start_initialization 7C94  
               ??___wmul 0013         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001  
          ??_keypad_unit 0011                 _ECCP1CON 000FBD           __size_of_motor 0046  
         ___wmul@product 0013      __end_of_keypad_unit 8000         __CFG_WDTPS$32768 000000  
      ___wmul@multiplier 000F                 __Hrparam 0000                 __Lrparam 0000  
               _check_00 000B                 _check_11 0009                 _check_22 0007  
            _keypad_unit 7E10            __size_of_main 00FE    __CFG_CPUDIV$OSC1_PLL2 000000  
           motor@num_pwm 000F  
