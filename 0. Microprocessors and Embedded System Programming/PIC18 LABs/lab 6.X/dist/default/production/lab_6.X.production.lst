

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 31 12:53:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TMR1	set	4046
    52  0000                     _TMR0	set	4054
    53  0000                     _SPBRG	set	4015
    54  0000                     _T1CON	set	4045
    55  0000                     _T0CON	set	4053
    56  0000                     _ADCON2	set	4032
    57  0000                     _ADCON1	set	4033
    58  0000                     _ADCON0	set	4034
    59  0000                     _TMR1L	set	4046
    60  0000                     _TXREG	set	4013
    61  0000                     _ADRESH	set	4036
    62  0000                     _TMR0ON	set	32431
    63  0000                     _TMR1ON	set	32360
    64  0000                     _CREN	set	32092
    65  0000                     _BRGH	set	32098
    66  0000                     _SYNC	set	32100
    67  0000                     _TXEN	set	32101
    68  0000                     _SPEN	set	32095
    69  0000                     _ADIE	set	31982
    70  0000                     _TMR0IE	set	32661
    71  0000                     _PEIE	set	32662
    72  0000                     _GIE	set	32663
    73  0000                     _TRISA0	set	31888
    74  0000                     _TMR0IF	set	32658
    75  0000                     _GODONE	set	32273
    76  0000                     _TXIF	set	31988
    77  0000                     _ADIF	set	31990
    78                           
    79                           ; #config settings
    80  0000                     
    81                           	psect	cinit
    82  0003B8                     __pcinit:
    83                           	opt callstack 0
    84  0003B8                     start_initialization:
    85                           	opt callstack 0
    86  0003B8                     __initialization:
    87                           	opt callstack 0
    88                           
    89                           ; Clear objects allocated to COMRAM (5 bytes)
    90  0003B8  6A0D               	clrf	(__pbssCOMRAM+4)& (0+255),c
    91  0003BA  6A0C               	clrf	(__pbssCOMRAM+3)& (0+255),c
    92  0003BC  6A0B               	clrf	(__pbssCOMRAM+2)& (0+255),c
    93  0003BE  6A0A               	clrf	(__pbssCOMRAM+1)& (0+255),c
    94  0003C0  6A09               	clrf	__pbssCOMRAM& (0+255),c
    95  0003C2                     end_of_initialization:
    96                           	opt callstack 0
    97  0003C2                     __end_of__initialization:
    98                           	opt callstack 0
    99  0003C2  900E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   100  0003C4  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   101  0003C6  0100               	movlb	0
   102  0003C8  EFB6  F001         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	bssCOMRAM
   105  000009                     __pbssCOMRAM:
   106                           	opt callstack 0
   107  000009                     _hund:
   108                           	opt callstack 0
   109  000009                     	ds	1
   110  00000A                     _tens:
   111                           	opt callstack 0
   112  00000A                     	ds	1
   113  00000B                     _units:
   114                           	opt callstack 0
   115  00000B                     	ds	1
   116  00000C                     _value:
   117                           	opt callstack 0
   118  00000C                     	ds	1
   119  00000D                     _count:
   120                           	opt callstack 0
   121  00000D                     	ds	1
   122                           
   123                           	psect	cstackCOMRAM
   124  000001                     __pcstackCOMRAM:
   125                           	opt callstack 0
   126  000001                     ?___awdiv:
   127                           	opt callstack 0
   128  000001                     ?___awmod:
   129                           	opt callstack 0
   130  000001                     ___awdiv@dividend:
   131                           	opt callstack 0
   132  000001                     ___awmod@dividend:
   133                           	opt callstack 0
   134                           
   135                           ; 2 bytes @ 0x0
   136  000001                     	ds	2
   137  000003                     ___awdiv@divisor:
   138                           	opt callstack 0
   139  000003                     ___awmod@divisor:
   140                           	opt callstack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143  000003                     	ds	2
   144  000005                     ___awdiv@counter:
   145                           	opt callstack 0
   146  000005                     ___awmod@counter:
   147                           	opt callstack 0
   148                           
   149                           ; 1 bytes @ 0x4
   150  000005                     	ds	1
   151  000006                     ___awdiv@sign:
   152                           	opt callstack 0
   153  000006                     ___awmod@sign:
   154                           	opt callstack 0
   155                           
   156                           ; 1 bytes @ 0x5
   157  000006                     	ds	1
   158  000007                     ___awdiv@quotient:
   159                           	opt callstack 0
   160                           
   161                           ; 2 bytes @ 0x6
   162  000007                     	ds	2
   163  000009                     
   164                           ; 1 bytes @ 0x8
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 158 in file "lab 6.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   184 ;;      Params:         0       0       0       0       0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		Nothing
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  00036C                     __ptext0:
   199                           	opt callstack 0
   200  00036C                     _main:
   201                           	opt callstack 29
   202  00036C                     
   203                           ;lab 6.c: 160:     TRISA0 = 1;
   204  00036C  8092               	bsf	3986,0,c	;volatile
   205  00036E                     
   206                           ;lab 6.c: 162:     ADCON0 = 0B00000001;
   207  00036E  0E01               	movlw	1
   208  000370  6EC2               	movwf	194,c	;volatile
   209                           
   210                           ;lab 6.c: 163:     ADCON1 = 0B00001101;
   211  000372  0E0D               	movlw	13
   212  000374  6EC1               	movwf	193,c	;volatile
   213                           
   214                           ;lab 6.c: 164:     ADCON2 = 0B00010010;
   215  000376  0E12               	movlw	18
   216  000378  6EC0               	movwf	192,c	;volatile
   217                           
   218                           ;lab 6.c: 166:     T0CON = 0B00000110;
   219  00037A  0E06               	movlw	6
   220  00037C  6ED5               	movwf	213,c	;volatile
   221                           
   222                           ;lab 6.c: 167:     T1CON = 0B10000010;
   223  00037E  0E82               	movlw	130
   224  000380  6ECD               	movwf	205,c	;volatile
   225                           
   226                           ;lab 6.c: 168:     TMR0 = 26474;
   227  000382  0E67               	movlw	103
   228  000384  6ED7               	movwf	215,c	;volatile
   229  000386  0E6A               	movlw	106
   230  000388  6ED6               	movwf	214,c	;volatile
   231                           
   232                           ;lab 6.c: 169:     TMR1 = 0;
   233  00038A  0E00               	movlw	0
   234  00038C  6ECF               	movwf	207,c	;volatile
   235  00038E  0E00               	movlw	0
   236  000390  6ECE               	movwf	206,c	;volatile
   237  000392                     
   238                           ;lab 6.c: 171:     GIE = 1;
   239  000392  8EF2               	bsf	4082,7,c	;volatile
   240  000394                     
   241                           ;lab 6.c: 172:     PEIE = 1;
   242  000394  8CF2               	bsf	4082,6,c	;volatile
   243  000396                     
   244                           ;lab 6.c: 173:     TMR0IE = 1;
   245  000396  8AF2               	bsf	4082,5,c	;volatile
   246  000398                     
   247                           ;lab 6.c: 174:     ADIE = 1;
   248  000398  8C9D               	bsf	3997,6,c	;volatile
   249  00039A                     
   250                           ;lab 6.c: 176:     SPEN = 1;
   251  00039A  8EAB               	bsf	4011,7,c	;volatile
   252  00039C                     
   253                           ;lab 6.c: 177:     TXEN = 1;
   254  00039C  8AAC               	bsf	4012,5,c	;volatile
   255  00039E                     
   256                           ;lab 6.c: 178:     SYNC = 0;
   257  00039E  98AC               	bcf	4012,4,c	;volatile
   258  0003A0                     
   259                           ;lab 6.c: 179:     BRGH = 1;
   260  0003A0  84AC               	bsf	4012,2,c	;volatile
   261  0003A2                     
   262                           ;lab 6.c: 180:     CREN = 1;
   263  0003A2  88AB               	bsf	4011,4,c	;volatile
   264                           
   265                           ;lab 6.c: 181:     SPBRG = 25;
   266  0003A4  0E19               	movlw	25
   267  0003A6  6EAF               	movwf	175,c	;volatile
   268  0003A8                     
   269                           ;lab 6.c: 182:     TXIF = 0;
   270  0003A8  989E               	bcf	3998,4,c	;volatile
   271  0003AA                     
   272                           ;lab 6.c: 184:     TMR1ON = 1;
   273  0003AA  80CD               	bsf	4045,0,c	;volatile
   274  0003AC                     
   275                           ;lab 6.c: 185:     TMR0ON = 1;
   276  0003AC  8ED5               	bsf	4053,7,c	;volatile
   277  0003AE                     
   278                           ;lab 6.c: 187:     GODONE = 1;
   279  0003AE  82C2               	bsf	4034,1,c	;volatile
   280  0003B0                     l109:
   281  0003B0  EFD8  F001         	goto	l109
   282  0003B4  EF07  F000         	goto	start
   283  0003B8                     __end_of_main:
   284                           	opt callstack 0
   285                           
   286 ;; *************** function _ISR *****************
   287 ;; Defined at:
   288 ;;		line 79 in file "lab 6.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   302 ;;      Params:         0       0       0       0       0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used:    1
   308 ;; Hardware stack levels required when called:    1
   309 ;; This function calls:
   310 ;;		___awdiv
   311 ;;		___awmod
   312 ;; This function is called by:
   313 ;;		Interrupt level 2
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	intcode
   318  000008                     __pintcode:
   319                           	opt callstack 0
   320  000008                     _ISR:
   321                           	opt callstack 29
   322                           
   323                           ;incstack = 0
   324  000008  820E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   325  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   326                           
   327                           	psect	intcode_body
   328  000012                     __pintcode_body:
   329                           	opt callstack 29
   330  000012                     int_func:
   331                           	opt callstack 29
   332  000012  0006               	pop		; remove dummy address from shadow register refresh
   333  000014                     
   334                           ;lab 6.c: 81:     if (ADIF == 1)
   335  000014  AC9E               	btfss	3998,6,c	;volatile
   336  000016  EF0F  F000         	goto	i2u37_41
   337  00001A  EF11  F000         	goto	i2u37_40
   338  00001E                     i2u37_41:
   339  00001E  EF73  F000         	goto	i2l69
   340  000022                     i2u37_40:
   341  000022                     
   342                           ;lab 6.c: 82:     {;lab 6.c: 83:         ADIF = 0;
   343  000022  9C9E               	bcf	3998,6,c	;volatile
   344                           
   345                           ;lab 6.c: 84:         value = ADRESH;
   346  000024  CFC4 F00C          	movff	4036,_value	;volatile
   347  000028                     
   348                           ;lab 6.c: 86:         hund = value/100;
   349  000028  C00C  F001         	movff	_value,___awdiv@dividend
   350  00002C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   351  00002E  0E00               	movlw	0
   352  000030  6E04               	movwf	(___awdiv@divisor+1)^0,c
   353  000032  0E64               	movlw	100
   354  000034  6E03               	movwf	___awdiv@divisor^0,c
   355  000036  ECFC  F000         	call	___awdiv	;wreg free
   356  00003A  5001               	movf	?___awdiv^0,w,c
   357  00003C  6E09               	movwf	_hund^0,c
   358  00003E                     
   359                           ;lab 6.c: 87:         hund = hund + 48;
   360  00003E  5009               	movf	_hund^0,w,c
   361  000040  0F30               	addlw	48
   362  000042  6E09               	movwf	_hund^0,c
   363  000044                     
   364                           ;lab 6.c: 88:         value = value%100;
   365  000044  C00C  F001         	movff	_value,___awmod@dividend
   366  000048  6A02               	clrf	(___awmod@dividend+1)^0,c
   367  00004A  0E00               	movlw	0
   368  00004C  6E04               	movwf	(___awmod@divisor+1)^0,c
   369  00004E  0E64               	movlw	100
   370  000050  6E03               	movwf	___awmod@divisor^0,c
   371  000052  EC5E  F001         	call	___awmod	;wreg free
   372  000056  5001               	movf	?___awmod^0,w,c
   373  000058  6E0C               	movwf	_value^0,c
   374  00005A                     
   375                           ;lab 6.c: 89:         tens = value/10;
   376  00005A  C00C  F001         	movff	_value,___awdiv@dividend
   377  00005E  6A02               	clrf	(___awdiv@dividend+1)^0,c
   378  000060  0E00               	movlw	0
   379  000062  6E04               	movwf	(___awdiv@divisor+1)^0,c
   380  000064  0E0A               	movlw	10
   381  000066  6E03               	movwf	___awdiv@divisor^0,c
   382  000068  ECFC  F000         	call	___awdiv	;wreg free
   383  00006C  5001               	movf	?___awdiv^0,w,c
   384  00006E  6E0A               	movwf	_tens^0,c
   385  000070                     
   386                           ;lab 6.c: 90:         tens = tens + 48;
   387  000070  500A               	movf	_tens^0,w,c
   388  000072  0F30               	addlw	48
   389  000074  6E0A               	movwf	_tens^0,c
   390                           
   391                           ;lab 6.c: 91:         units = value%10;
   392  000076  C00C  F001         	movff	_value,___awmod@dividend
   393  00007A  6A02               	clrf	(___awmod@dividend+1)^0,c
   394  00007C  0E00               	movlw	0
   395  00007E  6E04               	movwf	(___awmod@divisor+1)^0,c
   396  000080  0E0A               	movlw	10
   397  000082  6E03               	movwf	___awmod@divisor^0,c
   398  000084  EC5E  F001         	call	___awmod	;wreg free
   399  000088  5001               	movf	?___awmod^0,w,c
   400  00008A  6E0B               	movwf	_units^0,c
   401  00008C                     
   402                           ;lab 6.c: 92:         units = units + 48;
   403  00008C  500B               	movf	_units^0,w,c
   404  00008E  0F30               	addlw	48
   405  000090  6E0B               	movwf	_units^0,c
   406  000092                     
   407                           ;lab 6.c: 94:         TXIF = 0;
   408  000092  989E               	bcf	3998,4,c	;volatile
   409  000094                     
   410                           ;lab 6.c: 95:         TXREG = hund;
   411  000094  C009  FFAD         	movff	_hund,4013	;volatile
   412  000098                     i2l70:
   413  000098  A89E               	btfss	3998,4,c	;volatile
   414  00009A  EF51  F000         	goto	i2u38_41
   415  00009E  EF53  F000         	goto	i2u38_40
   416  0000A2                     i2u38_41:
   417  0000A2  EF4C  F000         	goto	i2l70
   418  0000A6                     i2u38_40:
   419  0000A6                     
   420                           ;lab 6.c: 98:         TXIF = 0;
   421  0000A6  989E               	bcf	3998,4,c	;volatile
   422                           
   423                           ;lab 6.c: 99:         TXREG = tens;
   424  0000A8  C00A  FFAD         	movff	_tens,4013	;volatile
   425  0000AC                     i2l73:
   426  0000AC  A89E               	btfss	3998,4,c	;volatile
   427  0000AE  EF5B  F000         	goto	i2u39_41
   428  0000B2  EF5D  F000         	goto	i2u39_40
   429  0000B6                     i2u39_41:
   430  0000B6  EF56  F000         	goto	i2l73
   431  0000BA                     i2u39_40:
   432  0000BA                     
   433                           ;lab 6.c: 102:         TXIF = 0;
   434  0000BA  989E               	bcf	3998,4,c	;volatile
   435                           
   436                           ;lab 6.c: 103:         TXREG = units;
   437  0000BC  C00B  FFAD         	movff	_units,4013	;volatile
   438  0000C0                     i2l76:
   439  0000C0  A89E               	btfss	3998,4,c	;volatile
   440  0000C2  EF65  F000         	goto	i2u40_41
   441  0000C6  EF67  F000         	goto	i2u40_40
   442  0000CA                     i2u40_41:
   443  0000CA  EF60  F000         	goto	i2l76
   444  0000CE                     i2u40_40:
   445  0000CE                     
   446                           ;lab 6.c: 106:         TXIF = 0;
   447  0000CE  989E               	bcf	3998,4,c	;volatile
   448  0000D0                     
   449                           ;lab 6.c: 107:         TXREG = '\r';
   450  0000D0  0E0D               	movlw	13
   451  0000D2  6EAD               	movwf	173,c	;volatile
   452  0000D4                     i2l79:
   453  0000D4  A89E               	btfss	3998,4,c	;volatile
   454  0000D6  EF6F  F000         	goto	i2u41_41
   455  0000DA  EF71  F000         	goto	i2u41_40
   456  0000DE                     i2u41_41:
   457  0000DE  EF6A  F000         	goto	i2l79
   458  0000E2                     i2u41_40:
   459  0000E2                     
   460                           ;lab 6.c: 110:         TXIF = 0;
   461  0000E2  989E               	bcf	3998,4,c	;volatile
   462                           
   463                           ;lab 6.c: 112:         GODONE = 1;
   464  0000E4  82C2               	bsf	4034,1,c	;volatile
   465  0000E6                     i2l69:
   466                           
   467                           ;lab 6.c: 115:     if (TMR0IF == 1 )
   468  0000E6  A4F2               	btfss	4082,2,c	;volatile
   469  0000E8  EF78  F000         	goto	i2u42_41
   470  0000EC  EF7A  F000         	goto	i2u42_40
   471  0000F0                     i2u42_41:
   472  0000F0  EFFA  F000         	goto	i2l104
   473  0000F4                     i2u42_40:
   474  0000F4                     
   475                           ;lab 6.c: 116:     {;lab 6.c: 117:         count = TMR1L;
   476  0000F4  CFCE F00D          	movff	4046,_count	;volatile
   477  0000F8                     
   478                           ;lab 6.c: 118:         count = count/5;
   479  0000F8  C00D  F001         	movff	_count,___awdiv@dividend
   480  0000FC  6A02               	clrf	(___awdiv@dividend+1)^0,c
   481  0000FE  0E00               	movlw	0
   482  000100  6E04               	movwf	(___awdiv@divisor+1)^0,c
   483  000102  0E05               	movlw	5
   484  000104  6E03               	movwf	___awdiv@divisor^0,c
   485  000106  ECFC  F000         	call	___awdiv	;wreg free
   486  00010A  5001               	movf	?___awdiv^0,w,c
   487  00010C  6E0D               	movwf	_count^0,c
   488                           
   489                           ;lab 6.c: 120:         hund = count/100;
   490  00010E  C00D  F001         	movff	_count,___awdiv@dividend
   491  000112  6A02               	clrf	(___awdiv@dividend+1)^0,c
   492  000114  0E00               	movlw	0
   493  000116  6E04               	movwf	(___awdiv@divisor+1)^0,c
   494  000118  0E64               	movlw	100
   495  00011A  6E03               	movwf	___awdiv@divisor^0,c
   496  00011C  ECFC  F000         	call	___awdiv	;wreg free
   497  000120  5001               	movf	?___awdiv^0,w,c
   498  000122  6E09               	movwf	_hund^0,c
   499  000124                     
   500                           ;lab 6.c: 121:         hund = hund + 48;
   501  000124  5009               	movf	_hund^0,w,c
   502  000126  0F30               	addlw	48
   503  000128  6E09               	movwf	_hund^0,c
   504  00012A                     
   505                           ;lab 6.c: 122:         count = count%100;
   506  00012A  C00D  F001         	movff	_count,___awmod@dividend
   507  00012E  6A02               	clrf	(___awmod@dividend+1)^0,c
   508  000130  0E00               	movlw	0
   509  000132  6E04               	movwf	(___awmod@divisor+1)^0,c
   510  000134  0E64               	movlw	100
   511  000136  6E03               	movwf	___awmod@divisor^0,c
   512  000138  EC5E  F001         	call	___awmod	;wreg free
   513  00013C  5001               	movf	?___awmod^0,w,c
   514  00013E  6E0D               	movwf	_count^0,c
   515  000140                     
   516                           ;lab 6.c: 123:         tens = count/10;
   517  000140  C00D  F001         	movff	_count,___awdiv@dividend
   518  000144  6A02               	clrf	(___awdiv@dividend+1)^0,c
   519  000146  0E00               	movlw	0
   520  000148  6E04               	movwf	(___awdiv@divisor+1)^0,c
   521  00014A  0E0A               	movlw	10
   522  00014C  6E03               	movwf	___awdiv@divisor^0,c
   523  00014E  ECFC  F000         	call	___awdiv	;wreg free
   524  000152  5001               	movf	?___awdiv^0,w,c
   525  000154  6E0A               	movwf	_tens^0,c
   526  000156                     
   527                           ;lab 6.c: 124:         tens = tens + 48;
   528  000156  500A               	movf	_tens^0,w,c
   529  000158  0F30               	addlw	48
   530  00015A  6E0A               	movwf	_tens^0,c
   531                           
   532                           ;lab 6.c: 125:         units = count%10;
   533  00015C  C00D  F001         	movff	_count,___awmod@dividend
   534  000160  6A02               	clrf	(___awmod@dividend+1)^0,c
   535  000162  0E00               	movlw	0
   536  000164  6E04               	movwf	(___awmod@divisor+1)^0,c
   537  000166  0E0A               	movlw	10
   538  000168  6E03               	movwf	___awmod@divisor^0,c
   539  00016A  EC5E  F001         	call	___awmod	;wreg free
   540  00016E  5001               	movf	?___awmod^0,w,c
   541  000170  6E0B               	movwf	_units^0,c
   542  000172                     
   543                           ;lab 6.c: 126:         units = units + 48;
   544  000172  500B               	movf	_units^0,w,c
   545  000174  0F30               	addlw	48
   546  000176  6E0B               	movwf	_units^0,c
   547  000178                     
   548                           ;lab 6.c: 128:         TXREG = '\r';
   549  000178  0E0D               	movlw	13
   550  00017A  6EAD               	movwf	173,c	;volatile
   551  00017C                     i2l83:
   552  00017C  A89E               	btfss	3998,4,c	;volatile
   553  00017E  EFC3  F000         	goto	i2u43_41
   554  000182  EFC5  F000         	goto	i2u43_40
   555  000186                     i2u43_41:
   556  000186  EFBE  F000         	goto	i2l83
   557  00018A                     i2u43_40:
   558  00018A                     
   559                           ;lab 6.c: 130:         TXIF = 0;
   560  00018A  989E               	bcf	3998,4,c	;volatile
   561  00018C                     
   562                           ;lab 6.c: 132:         TXREG = '\r';
   563  00018C  0E0D               	movlw	13
   564  00018E  6EAD               	movwf	173,c	;volatile
   565  000190                     i2l86:
   566  000190  A89E               	btfss	3998,4,c	;volatile
   567  000192  EFCD  F000         	goto	i2u44_41
   568  000196  EFCF  F000         	goto	i2u44_40
   569  00019A                     i2u44_41:
   570  00019A  EFC8  F000         	goto	i2l86
   571  00019E                     i2u44_40:
   572  00019E                     
   573                           ;lab 6.c: 134:         TXIF = 0;
   574  00019E  989E               	bcf	3998,4,c	;volatile
   575                           
   576                           ;lab 6.c: 136:         TXREG = hund;
   577  0001A0  C009  FFAD         	movff	_hund,4013	;volatile
   578  0001A4                     i2l89:
   579  0001A4  A89E               	btfss	3998,4,c	;volatile
   580  0001A6  EFD7  F000         	goto	i2u45_41
   581  0001AA  EFD9  F000         	goto	i2u45_40
   582  0001AE                     i2u45_41:
   583  0001AE  EFD2  F000         	goto	i2l89
   584  0001B2                     i2u45_40:
   585  0001B2                     
   586                           ;lab 6.c: 138:         TXIF = 0;
   587  0001B2  989E               	bcf	3998,4,c	;volatile
   588                           
   589                           ;lab 6.c: 140:         TXREG = tens;
   590  0001B4  C00A  FFAD         	movff	_tens,4013	;volatile
   591  0001B8                     i2l92:
   592  0001B8  A89E               	btfss	3998,4,c	;volatile
   593  0001BA  EFE1  F000         	goto	i2u46_41
   594  0001BE  EFE3  F000         	goto	i2u46_40
   595  0001C2                     i2u46_41:
   596  0001C2  EFDC  F000         	goto	i2l92
   597  0001C6                     i2u46_40:
   598  0001C6                     
   599                           ;lab 6.c: 142:         TXIF = 0;
   600  0001C6  989E               	bcf	3998,4,c	;volatile
   601                           
   602                           ;lab 6.c: 144:         TXREG = units;
   603  0001C8  C00B  FFAD         	movff	_units,4013	;volatile
   604  0001CC                     i2l95:
   605  0001CC  A89E               	btfss	3998,4,c	;volatile
   606  0001CE  EFEB  F000         	goto	i2u47_41
   607  0001D2  EFED  F000         	goto	i2u47_40
   608  0001D6                     i2u47_41:
   609  0001D6  EFE6  F000         	goto	i2l95
   610  0001DA                     i2u47_40:
   611  0001DA                     
   612                           ;lab 6.c: 146:         TXIF = 0;
   613  0001DA  989E               	bcf	3998,4,c	;volatile
   614  0001DC                     
   615                           ;lab 6.c: 148:         TXREG = '\r';
   616  0001DC  0E0D               	movlw	13
   617  0001DE  6EAD               	movwf	173,c	;volatile
   618  0001E0                     i2l98:
   619  0001E0  A89E               	btfss	3998,4,c	;volatile
   620  0001E2  EFF5  F000         	goto	i2u48_41
   621  0001E6  EFF7  F000         	goto	i2u48_40
   622  0001EA                     i2u48_41:
   623  0001EA  EFF0  F000         	goto	i2l98
   624  0001EE                     i2u48_40:
   625  0001EE                     
   626                           ;lab 6.c: 150:         TXIF = 0;
   627  0001EE  989E               	bcf	3998,4,c	;volatile
   628  0001F0                     i2l101:
   629  0001F0  EFF8  F000         	goto	i2l101
   630  0001F4                     i2l104:
   631  0001F4  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   632  0001F6  0011               	retfie		f
   633  0001F8                     __end_of_ISR:
   634                           	opt callstack 0
   635                           
   636 ;; *************** function ___awmod *****************
   637 ;; Defined at:
   638 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  dividend        2    0[COMRAM] int 
   641 ;;  divisor         2    2[COMRAM] int 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  sign            1    5[COMRAM] unsigned char 
   644 ;;  counter         1    4[COMRAM] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2    0[COMRAM] int 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   654 ;;      Params:         4       0       0       0       0       0       0       0       0
   655 ;;      Locals:         2       0       0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0
   657 ;;      Totals:         6       0       0       0       0       0       0       0       0
   658 ;;Total ram usage:        6 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_ISR
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text2
   668  0002BC                     __ptext2:
   669                           	opt callstack 0
   670  0002BC                     ___awmod:
   671                           	opt callstack 29
   672  0002BC  0E00               	movlw	0
   673  0002BE  6E06               	movwf	___awmod@sign^0,c
   674  0002C0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   675  0002C2  EF67  F001         	goto	i2u31_40
   676  0002C6  EF65  F001         	goto	i2u31_41
   677  0002CA                     i2u31_41:
   678  0002CA  EF6D  F001         	goto	i2l992
   679  0002CE                     i2u31_40:
   680  0002CE  6C01               	negf	___awmod@dividend^0,c
   681  0002D0  1E02               	comf	(___awmod@dividend+1)^0,f,c
   682  0002D2  B0D8               	btfsc	status,0,c
   683  0002D4  2A02               	incf	(___awmod@dividend+1)^0,f,c
   684  0002D6  0E01               	movlw	1
   685  0002D8  6E06               	movwf	___awmod@sign^0,c
   686  0002DA                     i2l992:
   687  0002DA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   688  0002DC  EF74  F001         	goto	i2u32_40
   689  0002E0  EF72  F001         	goto	i2u32_41
   690  0002E4                     i2u32_41:
   691  0002E4  EF78  F001         	goto	i2l996
   692  0002E8                     i2u32_40:
   693  0002E8  6C03               	negf	___awmod@divisor^0,c
   694  0002EA  1E04               	comf	(___awmod@divisor+1)^0,f,c
   695  0002EC  B0D8               	btfsc	status,0,c
   696  0002EE  2A04               	incf	(___awmod@divisor+1)^0,f,c
   697  0002F0                     i2l996:
   698  0002F0  5003               	movf	___awmod@divisor^0,w,c
   699  0002F2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   700  0002F4  B4D8               	btfsc	status,2,c
   701  0002F6  EF7F  F001         	goto	i2u33_41
   702  0002FA  EF81  F001         	goto	i2u33_40
   703  0002FE                     i2u33_41:
   704  0002FE  EFA5  F001         	goto	i2l1012
   705  000302                     i2u33_40:
   706  000302  0E01               	movlw	1
   707  000304  6E05               	movwf	___awmod@counter^0,c
   708  000306  EF89  F001         	goto	i2l1002
   709  00030A                     i2l1000:
   710  00030A  90D8               	bcf	status,0,c
   711  00030C  3603               	rlcf	___awmod@divisor^0,f,c
   712  00030E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   713  000310  2A05               	incf	___awmod@counter^0,f,c
   714  000312                     i2l1002:
   715  000312  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   716  000314  EF8E  F001         	goto	i2u34_41
   717  000318  EF90  F001         	goto	i2u34_40
   718  00031C                     i2u34_41:
   719  00031C  EF85  F001         	goto	i2l1000
   720  000320                     i2u34_40:
   721  000320                     i2l1004:
   722  000320  5003               	movf	___awmod@divisor^0,w,c
   723  000322  5C01               	subwf	___awmod@dividend^0,w,c
   724  000324  5004               	movf	(___awmod@divisor+1)^0,w,c
   725  000326  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   726  000328  A0D8               	btfss	status,0,c
   727  00032A  EF99  F001         	goto	i2u35_41
   728  00032E  EF9B  F001         	goto	i2u35_40
   729  000332                     i2u35_41:
   730  000332  EF9F  F001         	goto	i2l1008
   731  000336                     i2u35_40:
   732  000336  5003               	movf	___awmod@divisor^0,w,c
   733  000338  5E01               	subwf	___awmod@dividend^0,f,c
   734  00033A  5004               	movf	(___awmod@divisor+1)^0,w,c
   735  00033C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   736  00033E                     i2l1008:
   737  00033E  90D8               	bcf	status,0,c
   738  000340  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   739  000342  3203               	rrcf	___awmod@divisor^0,f,c
   740  000344  2E05               	decfsz	___awmod@counter^0,f,c
   741  000346  EF90  F001         	goto	i2l1004
   742  00034A                     i2l1012:
   743  00034A  5006               	movf	___awmod@sign^0,w,c
   744  00034C  B4D8               	btfsc	status,2,c
   745  00034E  EFAB  F001         	goto	i2u36_41
   746  000352  EFAD  F001         	goto	i2u36_40
   747  000356                     i2u36_41:
   748  000356  EFB1  F001         	goto	i2l1016
   749  00035A                     i2u36_40:
   750  00035A  6C01               	negf	___awmod@dividend^0,c
   751  00035C  1E02               	comf	(___awmod@dividend+1)^0,f,c
   752  00035E  B0D8               	btfsc	status,0,c
   753  000360  2A02               	incf	(___awmod@dividend+1)^0,f,c
   754  000362                     i2l1016:
   755  000362  C001  F001         	movff	___awmod@dividend,?___awmod
   756  000366  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   757  00036A  0012               	return		;funcret
   758  00036C                     __end_of___awmod:
   759                           	opt callstack 0
   760                           
   761 ;; *************** function ___awdiv *****************
   762 ;; Defined at:
   763 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  dividend        2    0[COMRAM] int 
   766 ;;  divisor         2    2[COMRAM] int 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  quotient        2    6[COMRAM] int 
   769 ;;  sign            1    5[COMRAM] unsigned char 
   770 ;;  counter         1    4[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  2    0[COMRAM] int 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   780 ;;      Params:         4       0       0       0       0       0       0       0       0
   781 ;;      Locals:         4       0       0       0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0
   783 ;;      Totals:         8       0       0       0       0       0       0       0       0
   784 ;;Total ram usage:        8 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_ISR
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text3
   794  0001F8                     __ptext3:
   795                           	opt callstack 0
   796  0001F8                     ___awdiv:
   797                           	opt callstack 29
   798  0001F8  0E00               	movlw	0
   799  0001FA  6E06               	movwf	___awdiv@sign^0,c
   800  0001FC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   801  0001FE  EF05  F001         	goto	i2u25_40
   802  000202  EF03  F001         	goto	i2u25_41
   803  000206                     i2u25_41:
   804  000206  EF0B  F001         	goto	i2l948
   805  00020A                     i2u25_40:
   806  00020A  6C03               	negf	___awdiv@divisor^0,c
   807  00020C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   808  00020E  B0D8               	btfsc	status,0,c
   809  000210  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   810  000212  0E01               	movlw	1
   811  000214  6E06               	movwf	___awdiv@sign^0,c
   812  000216                     i2l948:
   813  000216  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   814  000218  EF12  F001         	goto	i2u26_40
   815  00021C  EF10  F001         	goto	i2u26_41
   816  000220                     i2u26_41:
   817  000220  EF18  F001         	goto	i2l954
   818  000224                     i2u26_40:
   819  000224  6C01               	negf	___awdiv@dividend^0,c
   820  000226  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   821  000228  B0D8               	btfsc	status,0,c
   822  00022A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   823  00022C  0E01               	movlw	1
   824  00022E  1A06               	xorwf	___awdiv@sign^0,f,c
   825  000230                     i2l954:
   826  000230  0E00               	movlw	0
   827  000232  6E08               	movwf	(___awdiv@quotient+1)^0,c
   828  000234  0E00               	movlw	0
   829  000236  6E07               	movwf	___awdiv@quotient^0,c
   830  000238  5003               	movf	___awdiv@divisor^0,w,c
   831  00023A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   832  00023C  B4D8               	btfsc	status,2,c
   833  00023E  EF23  F001         	goto	i2u27_41
   834  000242  EF25  F001         	goto	i2u27_40
   835  000246                     i2u27_41:
   836  000246  EF4D  F001         	goto	i2l976
   837  00024A                     i2u27_40:
   838  00024A  0E01               	movlw	1
   839  00024C  6E05               	movwf	___awdiv@counter^0,c
   840  00024E  EF2D  F001         	goto	i2l962
   841  000252                     i2l960:
   842  000252  90D8               	bcf	status,0,c
   843  000254  3603               	rlcf	___awdiv@divisor^0,f,c
   844  000256  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   845  000258  2A05               	incf	___awdiv@counter^0,f,c
   846  00025A                     i2l962:
   847  00025A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   848  00025C  EF32  F001         	goto	i2u28_41
   849  000260  EF34  F001         	goto	i2u28_40
   850  000264                     i2u28_41:
   851  000264  EF29  F001         	goto	i2l960
   852  000268                     i2u28_40:
   853  000268                     i2l964:
   854  000268  90D8               	bcf	status,0,c
   855  00026A  3607               	rlcf	___awdiv@quotient^0,f,c
   856  00026C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   857  00026E  5003               	movf	___awdiv@divisor^0,w,c
   858  000270  5C01               	subwf	___awdiv@dividend^0,w,c
   859  000272  5004               	movf	(___awdiv@divisor+1)^0,w,c
   860  000274  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   861  000276  A0D8               	btfss	status,0,c
   862  000278  EF40  F001         	goto	i2u29_41
   863  00027C  EF42  F001         	goto	i2u29_40
   864  000280                     i2u29_41:
   865  000280  EF47  F001         	goto	i2l972
   866  000284                     i2u29_40:
   867  000284  5003               	movf	___awdiv@divisor^0,w,c
   868  000286  5E01               	subwf	___awdiv@dividend^0,f,c
   869  000288  5004               	movf	(___awdiv@divisor+1)^0,w,c
   870  00028A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   871  00028C  8007               	bsf	___awdiv@quotient^0,0,c
   872  00028E                     i2l972:
   873  00028E  90D8               	bcf	status,0,c
   874  000290  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   875  000292  3203               	rrcf	___awdiv@divisor^0,f,c
   876  000294  2E05               	decfsz	___awdiv@counter^0,f,c
   877  000296  EF34  F001         	goto	i2l964
   878  00029A                     i2l976:
   879  00029A  5006               	movf	___awdiv@sign^0,w,c
   880  00029C  B4D8               	btfsc	status,2,c
   881  00029E  EF53  F001         	goto	i2u30_41
   882  0002A2  EF55  F001         	goto	i2u30_40
   883  0002A6                     i2u30_41:
   884  0002A6  EF59  F001         	goto	i2l980
   885  0002AA                     i2u30_40:
   886  0002AA  6C07               	negf	___awdiv@quotient^0,c
   887  0002AC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   888  0002AE  B0D8               	btfsc	status,0,c
   889  0002B0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   890  0002B2                     i2l980:
   891  0002B2  C007  F001         	movff	___awdiv@quotient,?___awdiv
   892  0002B6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   893  0002BA  0012               	return		;funcret
   894  0002BC                     __end_of___awdiv:
   895                           	opt callstack 0
   896  0000                     
   897                           	psect	rparam
   898  0000                     
   899                           	psect	temp
   900  00000E                     btemp:
   901                           	opt callstack 0
   902  00000E                     	ds	1
   903  0000                     int$flags	set	btemp
   904  0000                     wtemp8	set	btemp+1
   905  0000                     ttemp5	set	btemp+1
   906  0000                     ttemp6	set	btemp+4
   907  0000                     ttemp7	set	btemp+8
   908                           tosu	equ	0xFFF
   909                           tosh	equ	0xFFE
   910                           tosl	equ	0xFFD
   911                           stkptr	equ	0xFFC
   912                           pclatu	equ	0xFFB
   913                           pclath	equ	0xFFA
   914                           pcl	equ	0xFF9
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           prodh	equ	0xFF4
   920                           prodl	equ	0xFF3
   921                           indf0	equ	0xFEF
   922                           postinc0	equ	0xFEE
   923                           postdec0	equ	0xFED
   924                           preinc0	equ	0xFEC
   925                           plusw0	equ	0xFEB
   926                           fsr0h	equ	0xFEA
   927                           fsr0l	equ	0xFE9
   928                           wreg	equ	0xFE8
   929                           indf1	equ	0xFE7
   930                           postinc1	equ	0xFE6
   931                           postdec1	equ	0xFE5
   932                           preinc1	equ	0xFE4
   933                           plusw1	equ	0xFE3
   934                           fsr1h	equ	0xFE2
   935                           fsr1l	equ	0xFE1
   936                           bsr	equ	0xFE0
   937                           indf2	equ	0xFDF
   938                           postinc2	equ	0xFDE
   939                           postdec2	equ	0xFDD
   940                           preinc2	equ	0xFDC
   941                           plusw2	equ	0xFDB
   942                           fsr2h	equ	0xFDA
   943                           fsr2l	equ	0xFD9
   944                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      8      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0    1964
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      8       D       1       13.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      20        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 31 12:53:35 2020

           ___awdiv@sign 0006              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l110 03B0                      l109 03B0  
                    l910 036C                      l920 0398                      l912 036E  
                    l930 03A2                      l922 039A                      l914 0392  
                    l932 03A8                      l924 039C                      l916 0394  
                    l934 03AA                      l926 039E                      l918 0396  
                    l936 03AC                      l928 03A0                      l938 03AE  
                    _GIE 007F97             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _ISR 0008             __CFG_BOR$OFF 000000             ___awmod@sign 0006  
           __CFG_FOSC$HS 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
                   _ADIE 007CEE                     _ADIF 007CF6                     _BRGH 007D62  
                   _CREN 007D5C                     _PEIE 007F96                     i2l70 0098  
                   i2l72 00A6                     i2l81 00E2                     i2l73 00AC  
                   i2l91 01B2                     i2l83 017C                     i2l75 00BA  
                   i2l92 01B8                     i2l76 00C0                     i2l85 018A  
                   i2l69 00E6                     i2l94 01C6                     i2l86 0190  
                   i2l78 00CE                     i2l95 01CC                     i2l79 00D4  
                   i2l88 019E                     i2l97 01DA                     i2l89 01A4  
                   i2l98 01E0                     _TMR0 000FD6                     _TMR1 000FCE  
                   _SPEN 007D5F                     _TXIF 007CF4                     _TXEN 007D65  
                   _SYNC 007D64                     _main 036C                     _hund 0009  
                   _tens 000A                     btemp 000E                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_ISR 0009            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001          __end_of___awdiv 02BC          __end_of___awmod 036C  
                  _T0CON 000FD5          ___awdiv@divisor 0003                    _T1CON 000FCD  
                  i2l100 01EE                    i2l101 01F0                    i2l102 01F0  
                  i2l104 01F4                    i2l346 02BA                    i2l359 036A  
                  i2l940 01F8                    i2l950 0224                    i2l942 01FC  
                  i2l960 0252                    i2l952 022C                    i2l944 020A  
                  i2l970 028C                    i2l962 025A                    i2l954 0230  
                  i2l946 0212                    i2l980 02B2                    i2l972 028E  
                  i2l964 0268                    i2l956 0238                    i2l948 0216  
        ___awdiv@counter 0005                    i2l974 0294                    i2l966 026E  
                  i2l958 024A                    i2l990 02D6                    i2l968 0284  
                  i2l976 029A                    i2l992 02DA                    i2l984 02BC  
                  i2l978 02AA                    i2l994 02E8                    i2l986 02C0  
                  i2l996 02F0                    i2l988 02CE                    i2l998 0302  
                  _TMR1L 000FCE                    _SPBRG 000FAF            __CFG_USBDIV$1 000000  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _count 000D                    _value 000C                    _units 000B  
                  ttemp5 000F                    ttemp6 0012                    ttemp7 0016  
                  status 000FD8                    wtemp8 000F           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 03B8             __end_of_main 03B8  
                 ??_main 0009            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
       ___awdiv@dividend 0001                   _GODONE 007E11                   i2l1000 030A  
                 i2l1010 0344                   i2l1002 0312                   i2l1004 0320  
                 i2l1012 034A                   i2l1020 0014                   i2l1014 035A  
                 i2l1006 0336                   i2l1030 005A                   i2l1022 0022  
                 i2l1016 0362                   i2l1008 033E                   i2l1040 00D0  
                 i2l1032 0070                   i2l1024 0028                   i2l1050 0140  
                 i2l1042 00F4                   i2l1034 008C                   i2l1026 003E  
                 i2l1060 01DC                   i2l1052 0156                   i2l1044 00F8  
                 i2l1036 0092                   i2l1028 0044                   i2l1054 0172  
                 i2l1046 0124                   i2l1038 0094                   i2l1056 0178  
                 i2l1048 012A                   i2l1058 018C                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _TMR0ON 007EAF                   _TMR1ON 007E68  
                 _TRISA0 007C90           __CFG_XINST$OFF 000000                ??___awdiv 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005               __accesstop 0060  
__end_of__initialization 03C2            ___rparam_used 000001           __pcstackCOMRAM 0001  
                i2u30_40 02AA                  i2u30_41 02A6                  i2u31_40 02CE  
                i2u31_41 02CA                  i2u32_40 02E8                  i2u40_40 00CE  
                i2u32_41 02E4                  i2u40_41 00CA                  i2u25_40 020A  
                i2u33_40 0302                  i2u41_40 00E2                  i2u25_41 0206  
                i2u33_41 02FE                  i2u41_41 00DE                  i2u26_40 0224  
                i2u34_40 0320                  i2u42_40 00F4                  i2u26_41 0220  
                i2u34_41 031C                  i2u42_41 00F0                  i2u27_40 024A  
                i2u35_40 0336                  i2u43_40 018A                  i2u27_41 0246  
                i2u35_41 0332                  i2u43_41 0186                  i2u28_40 0268  
                i2u36_40 035A                  i2u44_40 019E                  i2u28_41 0264  
                i2u36_41 0356                  i2u44_41 019A                  i2u29_40 0284  
                i2u45_40 01B2                  i2u37_40 0022                  i2u29_41 0280  
                i2u45_41 01AE                  i2u37_41 001E                  i2u46_40 01C6  
                i2u38_40 00A6                  i2u46_41 01C2                  i2u38_41 00A2  
                i2u47_40 01DA                  i2u39_40 00BA                  i2u47_41 01D6  
                i2u39_41 00B6                  i2u48_40 01EE                  i2u48_41 01EA  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 01F8                  ___awmod 02BC                  __pcinit 03B8  
                __ramtop 0800                  __ptext0 036C                  __ptext2 02BC  
                __ptext3 01F8             __size_of_ISR 01F0         ___awmod@dividend 0001  
         __pintcode_body 0012     end_of_initialization 03C2                  int_func 0012  
    start_initialization 03B8              __end_of_ISR 01F8         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0009                __pintcode 0008                 ?___awdiv 0001  
               ?___awmod 0001         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00C4         __size_of___awmod 00B0  
          __size_of_main 004C                 int$flags 000E    __CFG_CPUDIV$OSC1_PLL2 000000  
               intlevel2 0000  
