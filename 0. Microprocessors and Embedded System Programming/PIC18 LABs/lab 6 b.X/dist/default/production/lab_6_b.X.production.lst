

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 31 15:03:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007E82                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for _data
    57  007E82  0030               	dw	48
    58  0000                     _PORTB	set	3969
    59  0000                     _RCREG	set	4014
    60  0000                     _TRISE	set	3990
    61  0000                     _TRISB	set	3987
    62  0000                     _ADCON1	set	4033
    63  0000                     _SPBRG	set	4015
    64  0000                     _TRISD	set	3989
    65  0000                     _RE1	set	31777
    66  0000                     _RE2	set	31778
    67  0000                     _RCIF	set	31989
    68  0000                     _RE0	set	31776
    69  0000                     _CREN	set	32092
    70  0000                     _BRGH	set	32098
    71  0000                     _SYNC	set	32100
    72  0000                     _SPEN	set	32095
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  007EB8                     __pcinit:
    78                           	opt callstack 0
    79  007EB8                     start_initialization:
    80                           	opt callstack 0
    81  007EB8                     __initialization:
    82                           	opt callstack 0
    83                           
    84                           ; Initialize objects allocated to COMRAM (2 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86  007EB8  0E82               	movlw	low __pidataCOMRAM
    87  007EBA  6EF6               	movwf	tblptrl,c
    88  007EBC  0E7E               	movlw	high __pidataCOMRAM
    89  007EBE  6EF7               	movwf	tblptrh,c
    90  007EC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91  007EC2  6EF8               	movwf	tblptru,c
    92  007EC4  0009               	tblrd		*+	;fetch initializer
    93  007EC6  CFF5 F00C          	movff	tablat,__pdataCOMRAM
    94  007ECA  0009               	tblrd		*+	;fetch initializer
    95  007ECC  CFF5 F00D          	movff	tablat,__pdataCOMRAM+1
    96                           
    97                           ; Clear objects allocated to COMRAM (2 bytes)
    98  007ED0  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    99  007ED2  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   100  007ED4                     end_of_initialization:
   101                           	opt callstack 0
   102  007ED4                     __end_of__initialization:
   103                           	opt callstack 0
   104  007ED4  0100               	movlb	0
   105  007ED6  EF99  F03F         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	bssCOMRAM
   108  00000A                     __pbssCOMRAM:
   109                           	opt callstack 0
   110  00000A                     _x:
   111                           	opt callstack 0
   112  00000A                     	ds	2
   113                           
   114                           	psect	dataCOMRAM
   115  00000C                     __pdataCOMRAM:
   116                           	opt callstack 0
   117  00000C                     _data:
   118                           	opt callstack 0
   119  00000C                     	ds	2
   120                           
   121                           	psect	cstackCOMRAM
   122  000001                     __pcstackCOMRAM:
   123                           	opt callstack 0
   124  000001                     MSDelay@time:
   125                           	opt callstack 0
   126                           
   127                           ; 2 bytes @ 0x0
   128  000001                     	ds	2
   129  000003                     ??_MSDelay:
   130                           
   131                           ; 1 bytes @ 0x2
   132  000003                     	ds	1
   133  000004                     MSDelay@i:
   134                           	opt callstack 0
   135                           
   136                           ; 2 bytes @ 0x3
   137  000004                     	ds	2
   138  000006                     MSDelay@j:
   139                           	opt callstack 0
   140                           
   141                           ; 2 bytes @ 0x5
   142  000006                     	ds	2
   143  000008                     lcdcmd@value:
   144                           	opt callstack 0
   145  000008                     lcddata@value:
   146                           	opt callstack 0
   147                           
   148                           ; 2 bytes @ 0x7
   149  000008                     	ds	2
   150  00000A                     
   151                           ; 1 bytes @ 0x9
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 86 in file "lab 6b.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   171 ;;      Params:         0       0       0       0       0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels required when called:    2
   177 ;; This function calls:
   178 ;;		_MSDelay
   179 ;;		_lcdcmd
   180 ;;		_lcddata
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187  007F32                     __ptext0:
   188                           	opt callstack 0
   189  007F32                     _main:
   190                           	opt callstack 29
   191  007F32                     
   192                           ;lab 6b.c: 88: SPEN=1;
   193  007F32  8EAB               	bsf	4011,7,c	;volatile
   194                           
   195                           ;lab 6b.c: 89: SYNC=0;
   196  007F34  98AC               	bcf	4012,4,c	;volatile
   197                           
   198                           ;lab 6b.c: 90: BRGH=1;
   199  007F36  84AC               	bsf	4012,2,c	;volatile
   200  007F38                     
   201                           ;lab 6b.c: 91: TRISD=0;
   202  007F38  0E00               	movlw	0
   203  007F3A  6E95               	movwf	149,c	;volatile
   204  007F3C                     
   205                           ;lab 6b.c: 92: CREN=1;
   206  007F3C  88AB               	bsf	4011,4,c	;volatile
   207                           
   208                           ;lab 6b.c: 93: SPBRG=25;
   209  007F3E  0E19               	movlw	25
   210  007F40  6EAF               	movwf	175,c	;volatile
   211                           
   212                           ;lab 6b.c: 95: ADCON1 = 0B00001111;
   213  007F42  0E0F               	movlw	15
   214  007F44  6EC1               	movwf	193,c	;volatile
   215                           
   216                           ;lab 6b.c: 96: TRISB=0;
   217  007F46  0E00               	movlw	0
   218  007F48  6E93               	movwf	147,c	;volatile
   219                           
   220                           ;lab 6b.c: 97: TRISE=0;
   221  007F4A  0E00               	movlw	0
   222  007F4C  6E96               	movwf	150,c	;volatile
   223  007F4E                     
   224                           ;lab 6b.c: 99: RE0=0;
   225  007F4E  9084               	bcf	3972,0,c	;volatile
   226  007F50                     
   227                           ;lab 6b.c: 100: MSDelay(50);
   228  007F50  0E00               	movlw	0
   229  007F52  6E02               	movwf	(MSDelay@time+1)^0,c
   230  007F54  0E32               	movlw	50
   231  007F56  6E01               	movwf	MSDelay@time^0,c
   232  007F58  EC6D  F03F         	call	_MSDelay	;wreg free
   233  007F5C                     
   234                           ;lab 6b.c: 102: lcdcmd(0x38);
   235  007F5C  0E00               	movlw	0
   236  007F5E  6E09               	movwf	(lcdcmd@value+1)^0,c
   237  007F60  0E38               	movlw	56
   238  007F62  6E08               	movwf	lcdcmd@value^0,c
   239  007F64  EC42  F03F         	call	_lcdcmd	;wreg free
   240  007F68                     
   241                           ;lab 6b.c: 103: MSDelay(5);
   242  007F68  0E00               	movlw	0
   243  007F6A  6E02               	movwf	(MSDelay@time+1)^0,c
   244  007F6C  0E05               	movlw	5
   245  007F6E  6E01               	movwf	MSDelay@time^0,c
   246  007F70  EC6D  F03F         	call	_MSDelay	;wreg free
   247  007F74                     
   248                           ;lab 6b.c: 105: lcdcmd(0x0E);
   249  007F74  0E00               	movlw	0
   250  007F76  6E09               	movwf	(lcdcmd@value+1)^0,c
   251  007F78  0E0E               	movlw	14
   252  007F7A  6E08               	movwf	lcdcmd@value^0,c
   253  007F7C  EC42  F03F         	call	_lcdcmd	;wreg free
   254  007F80                     
   255                           ;lab 6b.c: 106: MSDelay(5);
   256  007F80  0E00               	movlw	0
   257  007F82  6E02               	movwf	(MSDelay@time+1)^0,c
   258  007F84  0E05               	movlw	5
   259  007F86  6E01               	movwf	MSDelay@time^0,c
   260  007F88  EC6D  F03F         	call	_MSDelay	;wreg free
   261  007F8C                     
   262                           ;lab 6b.c: 108: lcdcmd(0x01);
   263  007F8C  0E00               	movlw	0
   264  007F8E  6E09               	movwf	(lcdcmd@value+1)^0,c
   265  007F90  0E01               	movlw	1
   266  007F92  6E08               	movwf	lcdcmd@value^0,c
   267  007F94  EC42  F03F         	call	_lcdcmd	;wreg free
   268  007F98                     
   269                           ;lab 6b.c: 109: MSDelay(5);
   270  007F98  0E00               	movlw	0
   271  007F9A  6E02               	movwf	(MSDelay@time+1)^0,c
   272  007F9C  0E05               	movlw	5
   273  007F9E  6E01               	movwf	MSDelay@time^0,c
   274  007FA0  EC6D  F03F         	call	_MSDelay	;wreg free
   275  007FA4                     
   276                           ;lab 6b.c: 111: lcdcmd(0x06);
   277  007FA4  0E00               	movlw	0
   278  007FA6  6E09               	movwf	(lcdcmd@value+1)^0,c
   279  007FA8  0E06               	movlw	6
   280  007FAA  6E08               	movwf	lcdcmd@value^0,c
   281  007FAC  EC42  F03F         	call	_lcdcmd	;wreg free
   282  007FB0                     
   283                           ;lab 6b.c: 112: MSDelay(5);
   284  007FB0  0E00               	movlw	0
   285  007FB2  6E02               	movwf	(MSDelay@time+1)^0,c
   286  007FB4  0E05               	movlw	5
   287  007FB6  6E01               	movwf	MSDelay@time^0,c
   288  007FB8  EC6D  F03F         	call	_MSDelay	;wreg free
   289  007FBC                     
   290                           ;lab 6b.c: 114: lcdcmd(0x80);
   291  007FBC  0E00               	movlw	0
   292  007FBE  6E09               	movwf	(lcdcmd@value+1)^0,c
   293  007FC0  0E80               	movlw	128
   294  007FC2  6E08               	movwf	lcdcmd@value^0,c
   295  007FC4  EC42  F03F         	call	_lcdcmd	;wreg free
   296  007FC8                     
   297                           ;lab 6b.c: 115: MSDelay(5);
   298  007FC8  0E00               	movlw	0
   299  007FCA  6E02               	movwf	(MSDelay@time+1)^0,c
   300  007FCC  0E05               	movlw	5
   301  007FCE  6E01               	movwf	MSDelay@time^0,c
   302  007FD0  EC6D  F03F         	call	_MSDelay	;wreg free
   303  007FD4                     l46:
   304  007FD4  AA9E               	btfss	3998,5,c	;volatile
   305  007FD6  EFEF  F03F         	goto	u61
   306  007FDA  EFF1  F03F         	goto	u60
   307  007FDE                     u61:
   308  007FDE  EFEA  F03F         	goto	l46
   309  007FE2                     u60:
   310  007FE2                     
   311                           ;lab 6b.c: 120:         lcddata(RCREG);
   312  007FE2  CFAE F008          	movff	4014,lcddata@value	;volatile
   313  007FE6  6A09               	clrf	(lcddata@value+1)^0,c
   314  007FE8  EC4F  F03F         	call	_lcddata	;wreg free
   315                           
   316                           ;lab 6b.c: 121:         MSDelay(2);
   317  007FEC  0E00               	movlw	0
   318  007FEE  6E02               	movwf	(MSDelay@time+1)^0,c
   319  007FF0  0E02               	movlw	2
   320  007FF2  6E01               	movwf	MSDelay@time^0,c
   321  007FF4  EC6D  F03F         	call	_MSDelay	;wreg free
   322  007FF8  EFEA  F03F         	goto	l46
   323  007FFC  EF00  F000         	goto	start
   324  008000                     __end_of_main:
   325                           	opt callstack 0
   326                           
   327 ;; *************** function _lcddata *****************
   328 ;; Defined at:
   329 ;;		line 135 in file "lab 6b.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;  value           2    7[COMRAM] int 
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         2       0       0       0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0
   346 ;;      Totals:         2       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        2 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; Hardware stack levels required when called:    1
   350 ;; This function calls:
   351 ;;		_MSDelay
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text1
   358  007E9E                     __ptext1:
   359                           	opt callstack 0
   360  007E9E                     _lcddata:
   361                           	opt callstack 29
   362  007E9E                     
   363                           ;lab 6b.c: 135:  void lcddata(int value);lab 6b.c: 136:  {;lab 6b.c: 137:   PORTB=value;
   364  007E9E  C008  FF81         	movff	lcddata@value,3969	;volatile
   365                           
   366                           ;lab 6b.c: 138:   RE2=1;
   367  007EA2  8484               	bsf	3972,2,c	;volatile
   368                           
   369                           ;lab 6b.c: 139:   RE1=0;
   370  007EA4  9284               	bcf	3972,1,c	;volatile
   371                           
   372                           ;lab 6b.c: 140:   RE0=1;
   373  007EA6  8084               	bsf	3972,0,c	;volatile
   374  007EA8                     
   375                           ;lab 6b.c: 141:   MSDelay(2);
   376  007EA8  0E00               	movlw	0
   377  007EAA  6E02               	movwf	(MSDelay@time+1)^0,c
   378  007EAC  0E02               	movlw	2
   379  007EAE  6E01               	movwf	MSDelay@time^0,c
   380  007EB0  EC6D  F03F         	call	_MSDelay	;wreg free
   381  007EB4                     
   382                           ;lab 6b.c: 142:   RE0=0;
   383  007EB4  9084               	bcf	3972,0,c	;volatile
   384  007EB6  0012               	return		;funcret
   385  007EB8                     __end_of_lcddata:
   386                           	opt callstack 0
   387                           
   388 ;; *************** function _lcdcmd *****************
   389 ;; Defined at:
   390 ;;		line 125 in file "lab 6b.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  value           2    7[COMRAM] int 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         2       0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0
   407 ;;      Totals:         2       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        2 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    1
   411 ;; This function calls:
   412 ;;		_MSDelay
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419  007E84                     __ptext2:
   420                           	opt callstack 0
   421  007E84                     _lcdcmd:
   422                           	opt callstack 29
   423  007E84                     
   424                           ;lab 6b.c: 125: void lcdcmd(int value);lab 6b.c: 126:  {;lab 6b.c: 127:   PORTB=value;
   425  007E84  C008  FF81         	movff	lcdcmd@value,3969	;volatile
   426                           
   427                           ;lab 6b.c: 128:   RE2=0;
   428  007E88  9484               	bcf	3972,2,c	;volatile
   429                           
   430                           ;lab 6b.c: 129:   RE1=0;
   431  007E8A  9284               	bcf	3972,1,c	;volatile
   432                           
   433                           ;lab 6b.c: 130:   RE0=1;
   434  007E8C  8084               	bsf	3972,0,c	;volatile
   435  007E8E                     
   436                           ;lab 6b.c: 131:   MSDelay(2);
   437  007E8E  0E00               	movlw	0
   438  007E90  6E02               	movwf	(MSDelay@time+1)^0,c
   439  007E92  0E02               	movlw	2
   440  007E94  6E01               	movwf	MSDelay@time^0,c
   441  007E96  EC6D  F03F         	call	_MSDelay	;wreg free
   442  007E9A                     
   443                           ;lab 6b.c: 132:   RE0=0;
   444  007E9A  9084               	bcf	3972,0,c	;volatile
   445  007E9C  0012               	return		;funcret
   446  007E9E                     __end_of_lcdcmd:
   447                           	opt callstack 0
   448                           
   449 ;; *************** function _MSDelay *****************
   450 ;; Defined at:
   451 ;;		line 145 in file "lab 6b.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  time            2    0[COMRAM] int 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  j               2    5[COMRAM] int 
   456 ;;  i               2    3[COMRAM] int 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   466 ;;      Params:         2       0       0       0       0       0       0       0       0
   467 ;;      Locals:         4       0       0       0       0       0       0       0       0
   468 ;;      Temps:          1       0       0       0       0       0       0       0       0
   469 ;;      Totals:         7       0       0       0       0       0       0       0       0
   470 ;;Total ram usage:        7 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_main
   476 ;;		_lcdcmd
   477 ;;		_lcddata
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text3
   482  007EDA                     __ptext3:
   483                           	opt callstack 0
   484  007EDA                     _MSDelay:
   485                           	opt callstack 29
   486  007EDA                     
   487                           ;lab 6b.c: 145:  void MSDelay(int time);lab 6b.c: 146:  {;lab 6b.c: 147:   int i,j;;lab 
      +                          6b.c: 148:   for(i=0;i<time;i++)
   488  007EDA  0E00               	movlw	0
   489  007EDC  6E05               	movwf	(MSDelay@i+1)^0,c
   490  007EDE  0E00               	movlw	0
   491  007EE0  6E04               	movwf	MSDelay@i^0,c
   492  007EE2  EF89  F03F         	goto	l815
   493  007EE6                     l803:
   494                           
   495                           ;lab 6b.c: 149:   for(j=0;j<135;j++);
   496  007EE6  0E00               	movlw	0
   497  007EE8  6E07               	movwf	(MSDelay@j+1)^0,c
   498  007EEA  0E00               	movlw	0
   499  007EEC  6E06               	movwf	MSDelay@j^0,c
   500  007EEE                     l809:
   501  007EEE  4A06               	infsnz	MSDelay@j^0,f,c
   502  007EF0  2A07               	incf	(MSDelay@j+1)^0,f,c
   503  007EF2  BE07               	btfsc	(MSDelay@j+1)^0,7,c
   504  007EF4  EF85  F03F         	goto	u41
   505  007EF8  5007               	movf	(MSDelay@j+1)^0,w,c
   506  007EFA  E109               	bnz	u40
   507  007EFC  0E87               	movlw	135
   508  007EFE  5C06               	subwf	MSDelay@j^0,w,c
   509  007F00  A0D8               	btfss	status,0,c
   510  007F02  EF85  F03F         	goto	u41
   511  007F06  EF87  F03F         	goto	u40
   512  007F0A                     u41:
   513  007F0A  EF77  F03F         	goto	l809
   514  007F0E                     u40:
   515  007F0E  4A04               	infsnz	MSDelay@i^0,f,c
   516  007F10  2A05               	incf	(MSDelay@i+1)^0,f,c
   517  007F12                     l815:
   518  007F12  5001               	movf	MSDelay@time^0,w,c
   519  007F14  5C04               	subwf	MSDelay@i^0,w,c
   520  007F16  5005               	movf	(MSDelay@i+1)^0,w,c
   521  007F18  0A80               	xorlw	128
   522  007F1A  6E03               	movwf	??_MSDelay^0,c
   523  007F1C  5002               	movf	(MSDelay@time+1)^0,w,c
   524  007F1E  0A80               	xorlw	128
   525  007F20  5803               	subwfb	??_MSDelay^0,w,c
   526  007F22  A0D8               	btfss	status,0,c
   527  007F24  EF96  F03F         	goto	u51
   528  007F28  EF98  F03F         	goto	u50
   529  007F2C                     u51:
   530  007F2C  EF73  F03F         	goto	l803
   531  007F30                     u50:
   532  007F30  0012               	return		;funcret
   533  007F32                     __end_of_MSDelay:
   534                           	opt callstack 0
   535  0000                     
   536                           	psect	rparam
   537  0000                     tosu	equ	0xFFF
   538                           tosh	equ	0xFFE
   539                           tosl	equ	0xFFD
   540                           stkptr	equ	0xFFC
   541                           pclatu	equ	0xFFB
   542                           pclath	equ	0xFFA
   543                           pcl	equ	0xFF9
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           prodh	equ	0xFF4
   549                           prodl	equ	0xFF3
   550                           indf0	equ	0xFEF
   551                           postinc0	equ	0xFEE
   552                           postdec0	equ	0xFED
   553                           preinc0	equ	0xFEC
   554                           plusw0	equ	0xFEB
   555                           fsr0h	equ	0xFEA
   556                           fsr0l	equ	0xFE9
   557                           wreg	equ	0xFE8
   558                           indf1	equ	0xFE7
   559                           postinc1	equ	0xFE6
   560                           postdec1	equ	0xFE5
   561                           preinc1	equ	0xFE4
   562                           plusw1	equ	0xFE3
   563                           fsr1h	equ	0xFE2
   564                           fsr1l	equ	0xFE1
   565                           bsr	equ	0xFE0
   566                           indf2	equ	0xFDF
   567                           postinc2	equ	0xFDE
   568                           postdec2	equ	0xFDD
   569                           preinc2	equ	0xFDC
   570                           plusw2	equ	0xFDB
   571                           fsr2h	equ	0xFDA
   572                           fsr2l	equ	0xFD9
   573                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcdcmd
    _main->_lcddata
    _lcddata->_MSDelay
    _lcdcmd->_MSDelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2828
                            _MSDelay
                             _lcdcmd
                            _lcddata
 ---------------------------------------------------------------------------------
 (1) _lcddata                                              2     0      2     874
                                              7 COMRAM     2     0      2
                            _MSDelay
 ---------------------------------------------------------------------------------
 (1) _lcdcmd                                               2     0      2    1178
                                              7 COMRAM     2     0      2
                            _MSDelay
 ---------------------------------------------------------------------------------
 (2) _MSDelay                                              7     5      2     776
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSDelay
   _lcdcmd
     _MSDelay
   _lcddata
     _MSDelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       D       1       13.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      20        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 31 15:03:48 2020

                      _x 000A                       l54 7E9C                       l46 7FD4  
                     l65 7F30                       l57 7EB6                       u40 7F0E  
                     u41 7F0A                       u50 7F30                       u51 7F2C  
                     u60 7FE2                       u61 7FDE              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l801 7EDA  
                    l811 7EF2                      l803 7EE6                      l813 7F0E  
                    l821 7E9A                      l815 7F12                      l823 7E9E  
                    l831 7F38                      l809 7EEE                      l817 7E84  
                    l825 7EA8                      l841 7F68                      l833 7F3C  
                    l819 7E8E                      l827 7EB4                      l851 7FA4  
                    l843 7F74                      l835 7F4E                      l853 7FB0  
                    l845 7F80                      l837 7F50                      l829 7F32  
                    l855 7FBC                      l847 7F8C                      l839 7F5C  
                    l857 7FC8                      l849 7F98                      l859 7FE2  
           __CFG_CPB$OFF 000000                      _RE0 007C20                      _RE1 007C21  
                    _RE2 007C22             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
            lcdcmd@value 0008             __CFG_FOSC$HS 000000             __CFG_WDT$OFF 000000  
                   _BRGH 007D62                     _CREN 007D5C                     _RCIF 007CF5  
                   _SPEN 007D5F                     _SYNC 007D64                     _data 000C  
        __end_of_MSDelay 7F32                     _main 7F32             lcddata@value 0008  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTB 000F81            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcddata 7EB8            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 7EB8             __end_of_main 8000                   ??_main 000A  
          __activetblptr 000000                ??_MSDelay 0003                   _ADCON1 000FC1  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                   _lcdcmd 7E84  
              ??_lcddata 000A             __pdataCOMRAM 000C                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7ED4            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_lcdcmd 0008                  _MSDelay 7EDA          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000          __size_of_lcdcmd 001A  
                __pcinit 7EB8                  __ramtop 0800                  __ptext0 7F32  
                __ptext1 7E9E                  __ptext2 7E84                  __ptext3 7EDA  
                _lcddata 7E9E     end_of_initialization 7ED4              MSDelay@time 0001  
          __pidataCOMRAM 7E82           __end_of_lcdcmd 7E9E      start_initialization 7EB8  
               ??_lcdcmd 000A         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000A  
               ?_MSDelay 0001                 MSDelay@i 0004                 MSDelay@j 0006  
               ?_lcddata 0008         __CFG_WDTPS$32768 000000         __size_of_MSDelay 0058  
               __Hrparam 0000                 __Lrparam 0000         __size_of_lcddata 001A  
          __size_of_main 00CE    __CFG_CPUDIV$OSC1_PLL2 000000  
